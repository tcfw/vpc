syntax="proto3";

package vpc.hyper;
option go_package = ".;hyper";

enum VMStatus {
	PENDING = 0;
	CREATING = 1;
	AVAILABLE = 2;
	DELETING = 3;
	DELETED = 4;

	ERROR = 99;
}

message VM {
	int32 account = 1;
	string id = 2;
	VMStatus status = 17;
	map<string, bytes> metadata = 4;

	string template_id = 3;
	string placement_id = 5;
	string hyper_id = 6;
	string subnet_id = 7;
	
	repeated StorageDevice storage = 8;
	repeated string fw_rule_sets = 9;
	repeated string nics = 10;
	
	PowerState power_state = 11;
	string power_state_last_update = 12;
	
	PowerState desired_power_state = 13;
	string desired_power_state_last_update = 14;

	string ssh_key_ref = 15;
	bytes user_data = 16;

	string created_at = 18;
	string updated_at = 19;
	string availability_area = 20;

	repeated VolumeAttachment volumes = 21;
}

enum PowerState {
	NONE = 0;
	RUNNING = 1;
	SHUTDOWN = 4;
	SHUTOFF = 5;
	CRASHED = 6;
	MIGRATING = 7;
}

message VMTemplate {
	string id = 1;
	int32 vcpu = 2;
	int64 ram = 3;
	string libvirt_xml = 4;
}

message VolumeAttachment {
	string volume = 1;
	string dev = 2;
}

message StorageDevice {
	string id = 1;
	string device = 2;

	enum Driver {
		LOCAL = 0;
		RDB = 1;
	}

	Driver driver = 3;
	int64 size = 4;
}

message StatsRequest {
	string id = 1;
}

message VCPUStats {
	uint32 id = 1;
	uint64 time = 2;
	float usage = 3;
}

message MemStats {
	uint64 majors_faults = 1;
	uint64 minor_faults = 2;

	uint64 unused = 3;
	uint64 available = 4;
	uint64 usable = 5;

	uint64 swap_in = 6;
	uint64 swap_out = 7;

	uint64 last_update = 8;
}

message NetStats {
	string id = 1;

	uint64 rx_bytes = 2;
	uint64 rx_pkts = 3;
	uint64 rx_errs = 4;
	uint64 rx_drops = 5;

	uint64 tx_bytes = 6;
	uint64 tx_pkts = 7;
	uint64 tx_errs = 8;
	uint64 tx_drops = 9;
}

message DiskStats {
	string id = 1;

	uint64 rd_reqs = 2;
	uint64 rd_bytes = 3;
	uint64 rd_times = 4;

	uint64 wr_reqs = 5;
	uint64 wr_bytes = 6;
	uint64 wr_times = 7;

	uint64 alloc = 8;
	uint64 cap = 9;
	uint64 phy = 10;
}

message VMStats {
	repeated VCPUStats vcpus = 1;
	repeated NetStats nets = 2;
	repeated DiskStats disks = 3;
	MemStats mem = 4;
}

message StatsResponse {
	repeated VMStats stats = 1;
}

message ListRequest {
	string id = 1;
}

message ListResponse {
	repeated VM vms = 1;
}

message PowerRequest {
	enum ForcePowerType {
		REBOOT = 0;
		SHUTDOWN = 1;
		FORCE_REBOOT = 2;
		FORCE_SHUTDOWN = 3;
	}

	string id = 1;
	ForcePowerType type = 2;
}

message PowerResponse {}

service HyperService {
	rpc Stats(StatsRequest) returns (StatsResponse) {};
	rpc List(ListRequest) returns (ListResponse) {};
	rpc Power(PowerRequest) returns (PowerResponse) {};
}