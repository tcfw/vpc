// Code generated by protoc-gen-go. DO NOT EDIT.
// source: l3.proto

package vpc_l3

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SubnetLink struct {
	Cidr                 string   `protobuf:"bytes,1,opt,name=cidr,proto3" json:"cidr,omitempty"`
	LinkMac              string   `protobuf:"bytes,2,opt,name=link_mac,json=linkMac,proto3" json:"link_mac,omitempty"`
	LinkIp               string   `protobuf:"bytes,3,opt,name=link_ip,json=linkIp,proto3" json:"link_ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubnetLink) Reset()         { *m = SubnetLink{} }
func (m *SubnetLink) String() string { return proto.CompactTextString(m) }
func (*SubnetLink) ProtoMessage()    {}
func (*SubnetLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_14d891d3faabb37a, []int{0}
}

func (m *SubnetLink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubnetLink.Unmarshal(m, b)
}
func (m *SubnetLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubnetLink.Marshal(b, m, deterministic)
}
func (m *SubnetLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubnetLink.Merge(m, src)
}
func (m *SubnetLink) XXX_Size() int {
	return xxx_messageInfo_SubnetLink.Size(m)
}
func (m *SubnetLink) XXX_DiscardUnknown() {
	xxx_messageInfo_SubnetLink.DiscardUnknown(m)
}

var xxx_messageInfo_SubnetLink proto.InternalMessageInfo

func (m *SubnetLink) GetCidr() string {
	if m != nil {
		return m.Cidr
	}
	return ""
}

func (m *SubnetLink) GetLinkMac() string {
	if m != nil {
		return m.LinkMac
	}
	return ""
}

func (m *SubnetLink) GetLinkIp() string {
	if m != nil {
		return m.LinkIp
	}
	return ""
}

type Route struct {
	DestCidr             string   `protobuf:"bytes,1,opt,name=dest_cidr,json=destCidr,proto3" json:"dest_cidr,omitempty"`
	NextHop              string   `protobuf:"bytes,2,opt,name=next_hop,json=nextHop,proto3" json:"next_hop,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Route) Reset()         { *m = Route{} }
func (m *Route) String() string { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()    {}
func (*Route) Descriptor() ([]byte, []int) {
	return fileDescriptor_14d891d3faabb37a, []int{1}
}

func (m *Route) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Route.Unmarshal(m, b)
}
func (m *Route) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Route.Marshal(b, m, deterministic)
}
func (m *Route) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Route.Merge(m, src)
}
func (m *Route) XXX_Size() int {
	return xxx_messageInfo_Route.Size(m)
}
func (m *Route) XXX_DiscardUnknown() {
	xxx_messageInfo_Route.DiscardUnknown(m)
}

var xxx_messageInfo_Route proto.InternalMessageInfo

func (m *Route) GetDestCidr() string {
	if m != nil {
		return m.DestCidr
	}
	return ""
}

func (m *Route) GetNextHop() string {
	if m != nil {
		return m.NextHop
	}
	return ""
}

type ExternalConfig struct {
	NetworkCidr          string   `protobuf:"bytes,1,opt,name=network_cidr,json=networkCidr,proto3" json:"network_cidr,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Routes               []*Route `protobuf:"bytes,3,rep,name=routes,proto3" json:"routes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExternalConfig) Reset()         { *m = ExternalConfig{} }
func (m *ExternalConfig) String() string { return proto.CompactTextString(m) }
func (*ExternalConfig) ProtoMessage()    {}
func (*ExternalConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_14d891d3faabb37a, []int{2}
}

func (m *ExternalConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExternalConfig.Unmarshal(m, b)
}
func (m *ExternalConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExternalConfig.Marshal(b, m, deterministic)
}
func (m *ExternalConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExternalConfig.Merge(m, src)
}
func (m *ExternalConfig) XXX_Size() int {
	return xxx_messageInfo_ExternalConfig.Size(m)
}
func (m *ExternalConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ExternalConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ExternalConfig proto.InternalMessageInfo

func (m *ExternalConfig) GetNetworkCidr() string {
	if m != nil {
		return m.NetworkCidr
	}
	return ""
}

func (m *ExternalConfig) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *ExternalConfig) GetRoutes() []*Route {
	if m != nil {
		return m.Routes
	}
	return nil
}

type RouterConfig struct {
	DisableL3EcmpHasing  bool     `protobuf:"varint,1,opt,name=disable_l3_ecmp_hasing,json=disableL3EcmpHasing,proto3" json:"disable_l3_ecmp_hasing,omitempty"`
	Netns                string   `protobuf:"bytes,2,opt,name=netns,proto3" json:"netns,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouterConfig) Reset()         { *m = RouterConfig{} }
func (m *RouterConfig) String() string { return proto.CompactTextString(m) }
func (*RouterConfig) ProtoMessage()    {}
func (*RouterConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_14d891d3faabb37a, []int{3}
}

func (m *RouterConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouterConfig.Unmarshal(m, b)
}
func (m *RouterConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouterConfig.Marshal(b, m, deterministic)
}
func (m *RouterConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouterConfig.Merge(m, src)
}
func (m *RouterConfig) XXX_Size() int {
	return xxx_messageInfo_RouterConfig.Size(m)
}
func (m *RouterConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RouterConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RouterConfig proto.InternalMessageInfo

func (m *RouterConfig) GetDisableL3EcmpHasing() bool {
	if m != nil {
		return m.DisableL3EcmpHasing
	}
	return false
}

func (m *RouterConfig) GetNetns() string {
	if m != nil {
		return m.Netns
	}
	return ""
}

type Router struct {
	Id                   string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Subnets              []*SubnetLink   `protobuf:"bytes,2,rep,name=subnets,proto3" json:"subnets,omitempty"`
	PublicNetwork        *ExternalConfig `protobuf:"bytes,3,opt,name=public_network,json=publicNetwork,proto3" json:"public_network,omitempty"`
	Config               *RouterConfig   `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Router) Reset()         { *m = Router{} }
func (m *Router) String() string { return proto.CompactTextString(m) }
func (*Router) ProtoMessage()    {}
func (*Router) Descriptor() ([]byte, []int) {
	return fileDescriptor_14d891d3faabb37a, []int{4}
}

func (m *Router) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Router.Unmarshal(m, b)
}
func (m *Router) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Router.Marshal(b, m, deterministic)
}
func (m *Router) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Router.Merge(m, src)
}
func (m *Router) XXX_Size() int {
	return xxx_messageInfo_Router.Size(m)
}
func (m *Router) XXX_DiscardUnknown() {
	xxx_messageInfo_Router.DiscardUnknown(m)
}

var xxx_messageInfo_Router proto.InternalMessageInfo

func (m *Router) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Router) GetSubnets() []*SubnetLink {
	if m != nil {
		return m.Subnets
	}
	return nil
}

func (m *Router) GetPublicNetwork() *ExternalConfig {
	if m != nil {
		return m.PublicNetwork
	}
	return nil
}

func (m *Router) GetConfig() *RouterConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_14d891d3faabb37a, []int{5}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type AddRouterRequest struct {
	VpcId                int32    `protobuf:"varint,1,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	Router               *Router  `protobuf:"bytes,2,opt,name=router,proto3" json:"router,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRouterRequest) Reset()         { *m = AddRouterRequest{} }
func (m *AddRouterRequest) String() string { return proto.CompactTextString(m) }
func (*AddRouterRequest) ProtoMessage()    {}
func (*AddRouterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_14d891d3faabb37a, []int{6}
}

func (m *AddRouterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRouterRequest.Unmarshal(m, b)
}
func (m *AddRouterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRouterRequest.Marshal(b, m, deterministic)
}
func (m *AddRouterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRouterRequest.Merge(m, src)
}
func (m *AddRouterRequest) XXX_Size() int {
	return xxx_messageInfo_AddRouterRequest.Size(m)
}
func (m *AddRouterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRouterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddRouterRequest proto.InternalMessageInfo

func (m *AddRouterRequest) GetVpcId() int32 {
	if m != nil {
		return m.VpcId
	}
	return 0
}

func (m *AddRouterRequest) GetRouter() *Router {
	if m != nil {
		return m.Router
	}
	return nil
}

type GetRouterRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VpcId                int32    `protobuf:"varint,2,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRouterRequest) Reset()         { *m = GetRouterRequest{} }
func (m *GetRouterRequest) String() string { return proto.CompactTextString(m) }
func (*GetRouterRequest) ProtoMessage()    {}
func (*GetRouterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_14d891d3faabb37a, []int{7}
}

func (m *GetRouterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRouterRequest.Unmarshal(m, b)
}
func (m *GetRouterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRouterRequest.Marshal(b, m, deterministic)
}
func (m *GetRouterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRouterRequest.Merge(m, src)
}
func (m *GetRouterRequest) XXX_Size() int {
	return xxx_messageInfo_GetRouterRequest.Size(m)
}
func (m *GetRouterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRouterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRouterRequest proto.InternalMessageInfo

func (m *GetRouterRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetRouterRequest) GetVpcId() int32 {
	if m != nil {
		return m.VpcId
	}
	return 0
}

type SubnetLinkStatus struct {
	Subnet               *SubnetLink `protobuf:"bytes,1,opt,name=subnet,proto3" json:"subnet,omitempty"`
	Status               LinkStatus  `protobuf:"varint,2,opt,name=status,proto3,enum=vpc.l2.LinkStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SubnetLinkStatus) Reset()         { *m = SubnetLinkStatus{} }
func (m *SubnetLinkStatus) String() string { return proto.CompactTextString(m) }
func (*SubnetLinkStatus) ProtoMessage()    {}
func (*SubnetLinkStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_14d891d3faabb37a, []int{8}
}

func (m *SubnetLinkStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubnetLinkStatus.Unmarshal(m, b)
}
func (m *SubnetLinkStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubnetLinkStatus.Marshal(b, m, deterministic)
}
func (m *SubnetLinkStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubnetLinkStatus.Merge(m, src)
}
func (m *SubnetLinkStatus) XXX_Size() int {
	return xxx_messageInfo_SubnetLinkStatus.Size(m)
}
func (m *SubnetLinkStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_SubnetLinkStatus.DiscardUnknown(m)
}

var xxx_messageInfo_SubnetLinkStatus proto.InternalMessageInfo

func (m *SubnetLinkStatus) GetSubnet() *SubnetLink {
	if m != nil {
		return m.Subnet
	}
	return nil
}

func (m *SubnetLinkStatus) GetStatus() LinkStatus {
	if m != nil {
		return m.Status
	}
	return LinkStatus_DOWN
}

type RouterStatusResponse struct {
	Router               LinkStatus          `protobuf:"varint,1,opt,name=router,proto3,enum=vpc.l2.LinkStatus" json:"router,omitempty"`
	External             LinkStatus          `protobuf:"varint,2,opt,name=external,proto3,enum=vpc.l2.LinkStatus" json:"external,omitempty"`
	Subnets              []*SubnetLinkStatus `protobuf:"bytes,3,rep,name=subnets,proto3" json:"subnets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *RouterStatusResponse) Reset()         { *m = RouterStatusResponse{} }
func (m *RouterStatusResponse) String() string { return proto.CompactTextString(m) }
func (*RouterStatusResponse) ProtoMessage()    {}
func (*RouterStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_14d891d3faabb37a, []int{9}
}

func (m *RouterStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouterStatusResponse.Unmarshal(m, b)
}
func (m *RouterStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouterStatusResponse.Marshal(b, m, deterministic)
}
func (m *RouterStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouterStatusResponse.Merge(m, src)
}
func (m *RouterStatusResponse) XXX_Size() int {
	return xxx_messageInfo_RouterStatusResponse.Size(m)
}
func (m *RouterStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RouterStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RouterStatusResponse proto.InternalMessageInfo

func (m *RouterStatusResponse) GetRouter() LinkStatus {
	if m != nil {
		return m.Router
	}
	return LinkStatus_DOWN
}

func (m *RouterStatusResponse) GetExternal() LinkStatus {
	if m != nil {
		return m.External
	}
	return LinkStatus_DOWN
}

func (m *RouterStatusResponse) GetSubnets() []*SubnetLinkStatus {
	if m != nil {
		return m.Subnets
	}
	return nil
}

func init() {
	proto.RegisterType((*SubnetLink)(nil), "vpc.l3.SubnetLink")
	proto.RegisterType((*Route)(nil), "vpc.l3.Route")
	proto.RegisterType((*ExternalConfig)(nil), "vpc.l3.ExternalConfig")
	proto.RegisterType((*RouterConfig)(nil), "vpc.l3.RouterConfig")
	proto.RegisterType((*Router)(nil), "vpc.l3.Router")
	proto.RegisterType((*Empty)(nil), "vpc.l3.Empty")
	proto.RegisterType((*AddRouterRequest)(nil), "vpc.l3.AddRouterRequest")
	proto.RegisterType((*GetRouterRequest)(nil), "vpc.l3.GetRouterRequest")
	proto.RegisterType((*SubnetLinkStatus)(nil), "vpc.l3.SubnetLinkStatus")
	proto.RegisterType((*RouterStatusResponse)(nil), "vpc.l3.RouterStatusResponse")
}

func init() { proto.RegisterFile("l3.proto", fileDescriptor_14d891d3faabb37a) }

var fileDescriptor_14d891d3faabb37a = []byte{
	// 575 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x4d, 0x9c, 0xc6, 0x71, 0x26, 0x69, 0x14, 0x2d, 0xa1, 0x98, 0xc2, 0xa1, 0xac, 0x04, 0xaa,
	0x50, 0xe5, 0x83, 0x7d, 0x40, 0x3d, 0x20, 0x84, 0x4a, 0x44, 0x2a, 0x05, 0x24, 0x1c, 0x2e, 0x9c,
	0x2c, 0xc7, 0x5e, 0xda, 0x6d, 0x9c, 0xf5, 0x62, 0x6f, 0x42, 0xb9, 0xf2, 0x31, 0xfc, 0x00, 0x3f,
	0x88, 0xbc, 0xbb, 0xb6, 0xe3, 0xd0, 0xc2, 0xcd, 0x3b, 0xf3, 0xde, 0x9b, 0x99, 0x37, 0xbb, 0x06,
	0x2b, 0xf1, 0x1c, 0x9e, 0xa5, 0x22, 0x45, 0xe6, 0x96, 0x47, 0x4e, 0xe2, 0x1d, 0x5b, 0x89, 0xab,
	0x22, 0xf8, 0x33, 0xc0, 0x62, 0xb3, 0x64, 0x44, 0xcc, 0x29, 0x5b, 0x21, 0x04, 0x07, 0x11, 0x8d,
	0x33, 0xbb, 0x7d, 0xd2, 0x3e, 0xed, 0xfb, 0xf2, 0x1b, 0x3d, 0x06, 0x2b, 0xa1, 0x6c, 0x15, 0xac,
	0xc3, 0xc8, 0x36, 0x64, 0xbc, 0x57, 0x9c, 0x3f, 0x84, 0x11, 0x7a, 0x04, 0xf2, 0x33, 0xa0, 0xdc,
	0xee, 0xc8, 0x8c, 0x59, 0x1c, 0x2f, 0x39, 0x7e, 0x03, 0x5d, 0x3f, 0xdd, 0x08, 0x82, 0x9e, 0x40,
	0x3f, 0x26, 0xb9, 0x08, 0x76, 0x54, 0xad, 0x22, 0x70, 0xa1, 0x95, 0x19, 0xb9, 0x15, 0xc1, 0x75,
	0xca, 0x4b, 0xe5, 0xe2, 0x3c, 0x4b, 0x39, 0xbe, 0x81, 0xd1, 0xf4, 0x56, 0x90, 0x8c, 0x85, 0xc9,
	0x45, 0xca, 0xbe, 0xd2, 0x2b, 0xf4, 0x0c, 0x86, 0x8c, 0x88, 0xef, 0x69, 0xb6, 0xda, 0x15, 0x1b,
	0xe8, 0x98, 0xd4, 0x1b, 0x81, 0x41, 0x4b, 0x25, 0x83, 0x72, 0xf4, 0x1c, 0xcc, 0xac, 0xe8, 0x22,
	0xb7, 0x3b, 0x27, 0x9d, 0xd3, 0x81, 0x7b, 0xe8, 0xa8, 0xf1, 0x1d, 0xd9, 0x9b, 0xaf, 0x93, 0xf8,
	0x0b, 0x0c, 0x65, 0x20, 0xd3, 0x95, 0x3c, 0x38, 0x8a, 0x69, 0x1e, 0x2e, 0x13, 0x12, 0x24, 0x5e,
	0x40, 0xa2, 0x35, 0x0f, 0xae, 0xc3, 0x9c, 0xb2, 0x2b, 0x59, 0xd3, 0xf2, 0x1f, 0xe8, 0xec, 0xdc,
	0x9b, 0x46, 0x6b, 0x3e, 0x93, 0x29, 0x34, 0x81, 0x2e, 0x23, 0x82, 0xe5, 0xba, 0xbc, 0x3a, 0xe0,
	0xdf, 0x6d, 0x30, 0x95, 0xb6, 0x6c, 0x2e, 0xd6, 0x5d, 0x1b, 0x34, 0x46, 0x67, 0xd0, 0xcb, 0xa5,
	0xf1, 0x05, 0xa5, 0xe8, 0x0e, 0x95, 0xdd, 0xd5, 0xfb, 0xf0, 0x4b, 0x08, 0x7a, 0x0d, 0x23, 0xbe,
	0x59, 0x26, 0x34, 0x0a, 0xf4, 0xc0, 0xd2, 0xf0, 0x81, 0x7b, 0x54, 0x92, 0x9a, 0x6e, 0xf9, 0x87,
	0x0a, 0xfd, 0x51, 0x81, 0xd1, 0x19, 0x98, 0x91, 0x4c, 0xd8, 0x07, 0x92, 0x36, 0x69, 0x38, 0xa1,
	0x07, 0xf7, 0x35, 0x06, 0xf7, 0xa0, 0x3b, 0x5d, 0x73, 0xf1, 0x03, 0x7f, 0x82, 0xf1, 0xdb, 0x38,
	0x56, 0x18, 0x9f, 0x7c, 0xdb, 0x90, 0x5c, 0xa0, 0x87, 0x50, 0x5c, 0xa2, 0x40, 0xcf, 0xd2, 0xf5,
	0xbb, 0x5b, 0x1e, 0x5d, 0xc6, 0xe8, 0x85, 0xf6, 0x3a, 0x93, 0x06, 0x0c, 0xdc, 0x51, 0xb3, 0x82,
	0x36, 0x3b, 0xc3, 0xe7, 0x30, 0x7e, 0x4f, 0x44, 0x53, 0x72, 0xdf, 0x9a, 0xba, 0x84, 0xb1, 0x53,
	0x02, 0xdf, 0xc0, 0xb8, 0xb6, 0x66, 0x21, 0x42, 0xb1, 0xc9, 0xd1, 0x4b, 0x30, 0x95, 0x45, 0x92,
	0x7e, 0xb7, 0x89, 0x1a, 0x21, 0xb1, 0x92, 0x25, 0x65, 0x47, 0x25, 0xd6, 0x75, 0x6a, 0x3d, 0x5f,
	0x23, 0xf0, 0xaf, 0x36, 0x4c, 0x54, 0x93, 0x3a, 0x41, 0x72, 0x9e, 0xb2, 0x9c, 0x14, 0x22, 0x7a,
	0xce, 0xf6, 0xfd, 0x22, 0x0a, 0x81, 0x1c, 0xb0, 0x88, 0x5e, 0xcb, 0x3f, 0x4a, 0x56, 0x18, 0xe4,
	0xd6, 0x57, 0x42, 0x5d, 0x58, 0xfb, 0xef, 0x69, 0x34, 0xa9, 0x04, 0xba, 0x3f, 0x0d, 0xe8, 0xcf,
	0xbd, 0x05, 0xc9, 0xb6, 0x34, 0x22, 0xe8, 0x15, 0xf4, 0xab, 0x85, 0xa1, 0x8a, 0xbd, 0xbf, 0xc3,
	0xe3, 0xbd, 0xe5, 0xe0, 0x56, 0x41, 0xac, 0xd6, 0x52, 0x13, 0xf7, 0x37, 0x75, 0x07, 0x71, 0x56,
	0x3e, 0x1e, 0xbd, 0x90, 0xfb, 0xb9, 0x4f, 0x9b, 0xdc, 0xa6, 0xaf, 0xb8, 0x85, 0xce, 0x61, 0xf8,
	0x8e, 0x24, 0x44, 0x90, 0xff, 0x76, 0x51, 0xbd, 0x63, 0x75, 0x4b, 0x5b, 0x4b, 0x53, 0xfe, 0xcb,
	0xbc, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xc9, 0x11, 0xdb, 0x66, 0xe9, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// L3ServiceClient is the client API for L3Service service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type L3ServiceClient interface {
	AddRouter(ctx context.Context, in *AddRouterRequest, opts ...grpc.CallOption) (*Router, error)
	GetRouter(ctx context.Context, in *GetRouterRequest, opts ...grpc.CallOption) (*Router, error)
	RouterStatus(ctx context.Context, in *GetRouterRequest, opts ...grpc.CallOption) (*RouterStatusResponse, error)
	DeleteRouter(ctx context.Context, in *GetRouterRequest, opts ...grpc.CallOption) (*Empty, error)
}

type l3ServiceClient struct {
	cc *grpc.ClientConn
}

func NewL3ServiceClient(cc *grpc.ClientConn) L3ServiceClient {
	return &l3ServiceClient{cc}
}

func (c *l3ServiceClient) AddRouter(ctx context.Context, in *AddRouterRequest, opts ...grpc.CallOption) (*Router, error) {
	out := new(Router)
	err := c.cc.Invoke(ctx, "/vpc.l3.L3Service/AddRouter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *l3ServiceClient) GetRouter(ctx context.Context, in *GetRouterRequest, opts ...grpc.CallOption) (*Router, error) {
	out := new(Router)
	err := c.cc.Invoke(ctx, "/vpc.l3.L3Service/GetRouter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *l3ServiceClient) RouterStatus(ctx context.Context, in *GetRouterRequest, opts ...grpc.CallOption) (*RouterStatusResponse, error) {
	out := new(RouterStatusResponse)
	err := c.cc.Invoke(ctx, "/vpc.l3.L3Service/RouterStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *l3ServiceClient) DeleteRouter(ctx context.Context, in *GetRouterRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/vpc.l3.L3Service/DeleteRouter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// L3ServiceServer is the server API for L3Service service.
type L3ServiceServer interface {
	AddRouter(context.Context, *AddRouterRequest) (*Router, error)
	GetRouter(context.Context, *GetRouterRequest) (*Router, error)
	RouterStatus(context.Context, *GetRouterRequest) (*RouterStatusResponse, error)
	DeleteRouter(context.Context, *GetRouterRequest) (*Empty, error)
}

// UnimplementedL3ServiceServer can be embedded to have forward compatible implementations.
type UnimplementedL3ServiceServer struct {
}

func (*UnimplementedL3ServiceServer) AddRouter(ctx context.Context, req *AddRouterRequest) (*Router, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddRouter not implemented")
}
func (*UnimplementedL3ServiceServer) GetRouter(ctx context.Context, req *GetRouterRequest) (*Router, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRouter not implemented")
}
func (*UnimplementedL3ServiceServer) RouterStatus(ctx context.Context, req *GetRouterRequest) (*RouterStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RouterStatus not implemented")
}
func (*UnimplementedL3ServiceServer) DeleteRouter(ctx context.Context, req *GetRouterRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRouter not implemented")
}

func RegisterL3ServiceServer(s *grpc.Server, srv L3ServiceServer) {
	s.RegisterService(&_L3Service_serviceDesc, srv)
}

func _L3Service_AddRouter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRouterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(L3ServiceServer).AddRouter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vpc.l3.L3Service/AddRouter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(L3ServiceServer).AddRouter(ctx, req.(*AddRouterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _L3Service_GetRouter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRouterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(L3ServiceServer).GetRouter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vpc.l3.L3Service/GetRouter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(L3ServiceServer).GetRouter(ctx, req.(*GetRouterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _L3Service_RouterStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRouterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(L3ServiceServer).RouterStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vpc.l3.L3Service/RouterStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(L3ServiceServer).RouterStatus(ctx, req.(*GetRouterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _L3Service_DeleteRouter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRouterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(L3ServiceServer).DeleteRouter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vpc.l3.L3Service/DeleteRouter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(L3ServiceServer).DeleteRouter(ctx, req.(*GetRouterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _L3Service_serviceDesc = grpc.ServiceDesc{
	ServiceName: "vpc.l3.L3Service",
	HandlerType: (*L3ServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddRouter",
			Handler:    _L3Service_AddRouter_Handler,
		},
		{
			MethodName: "GetRouter",
			Handler:    _L3Service_GetRouter_Handler,
		},
		{
			MethodName: "RouterStatus",
			Handler:    _L3Service_RouterStatus_Handler,
		},
		{
			MethodName: "DeleteRouter",
			Handler:    _L3Service_DeleteRouter_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "l3.proto",
}
