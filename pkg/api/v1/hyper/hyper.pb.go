// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.6.1
// source: hyper.proto

package hyper

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type VMStatus int32

const (
	VMStatus_PENDING   VMStatus = 0
	VMStatus_CREATING  VMStatus = 1
	VMStatus_AVAILABLE VMStatus = 2
	VMStatus_DELETING  VMStatus = 3
	VMStatus_DELETED   VMStatus = 4
	VMStatus_ERROR     VMStatus = 99
)

// Enum value maps for VMStatus.
var (
	VMStatus_name = map[int32]string{
		0:  "PENDING",
		1:  "CREATING",
		2:  "AVAILABLE",
		3:  "DELETING",
		4:  "DELETED",
		99: "ERROR",
	}
	VMStatus_value = map[string]int32{
		"PENDING":   0,
		"CREATING":  1,
		"AVAILABLE": 2,
		"DELETING":  3,
		"DELETED":   4,
		"ERROR":     99,
	}
)

func (x VMStatus) Enum() *VMStatus {
	p := new(VMStatus)
	*p = x
	return p
}

func (x VMStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VMStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_hyper_proto_enumTypes[0].Descriptor()
}

func (VMStatus) Type() protoreflect.EnumType {
	return &file_hyper_proto_enumTypes[0]
}

func (x VMStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VMStatus.Descriptor instead.
func (VMStatus) EnumDescriptor() ([]byte, []int) {
	return file_hyper_proto_rawDescGZIP(), []int{0}
}

type PowerState int32

const (
	PowerState_NONE      PowerState = 0
	PowerState_RUNNING   PowerState = 1
	PowerState_SHUTDOWN  PowerState = 4
	PowerState_SHUTOFF   PowerState = 5
	PowerState_CRASHED   PowerState = 6
	PowerState_MIGRATING PowerState = 7
)

// Enum value maps for PowerState.
var (
	PowerState_name = map[int32]string{
		0: "NONE",
		1: "RUNNING",
		4: "SHUTDOWN",
		5: "SHUTOFF",
		6: "CRASHED",
		7: "MIGRATING",
	}
	PowerState_value = map[string]int32{
		"NONE":      0,
		"RUNNING":   1,
		"SHUTDOWN":  4,
		"SHUTOFF":   5,
		"CRASHED":   6,
		"MIGRATING": 7,
	}
)

func (x PowerState) Enum() *PowerState {
	p := new(PowerState)
	*p = x
	return p
}

func (x PowerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PowerState) Descriptor() protoreflect.EnumDescriptor {
	return file_hyper_proto_enumTypes[1].Descriptor()
}

func (PowerState) Type() protoreflect.EnumType {
	return &file_hyper_proto_enumTypes[1]
}

func (x PowerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PowerState.Descriptor instead.
func (PowerState) EnumDescriptor() ([]byte, []int) {
	return file_hyper_proto_rawDescGZIP(), []int{1}
}

type StorageDevice_Driver int32

const (
	StorageDevice_LOCAL StorageDevice_Driver = 0
	StorageDevice_RDB   StorageDevice_Driver = 1
)

// Enum value maps for StorageDevice_Driver.
var (
	StorageDevice_Driver_name = map[int32]string{
		0: "LOCAL",
		1: "RDB",
	}
	StorageDevice_Driver_value = map[string]int32{
		"LOCAL": 0,
		"RDB":   1,
	}
)

func (x StorageDevice_Driver) Enum() *StorageDevice_Driver {
	p := new(StorageDevice_Driver)
	*p = x
	return p
}

func (x StorageDevice_Driver) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StorageDevice_Driver) Descriptor() protoreflect.EnumDescriptor {
	return file_hyper_proto_enumTypes[2].Descriptor()
}

func (StorageDevice_Driver) Type() protoreflect.EnumType {
	return &file_hyper_proto_enumTypes[2]
}

func (x StorageDevice_Driver) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StorageDevice_Driver.Descriptor instead.
func (StorageDevice_Driver) EnumDescriptor() ([]byte, []int) {
	return file_hyper_proto_rawDescGZIP(), []int{3, 0}
}

type PowerRequest_ForcePowerType int32

const (
	PowerRequest_REBOOT         PowerRequest_ForcePowerType = 0
	PowerRequest_SHUTDOWN       PowerRequest_ForcePowerType = 1
	PowerRequest_FORCE_REBOOT   PowerRequest_ForcePowerType = 2
	PowerRequest_FORCE_SHUTDOWN PowerRequest_ForcePowerType = 3
)

// Enum value maps for PowerRequest_ForcePowerType.
var (
	PowerRequest_ForcePowerType_name = map[int32]string{
		0: "REBOOT",
		1: "SHUTDOWN",
		2: "FORCE_REBOOT",
		3: "FORCE_SHUTDOWN",
	}
	PowerRequest_ForcePowerType_value = map[string]int32{
		"REBOOT":         0,
		"SHUTDOWN":       1,
		"FORCE_REBOOT":   2,
		"FORCE_SHUTDOWN": 3,
	}
)

func (x PowerRequest_ForcePowerType) Enum() *PowerRequest_ForcePowerType {
	p := new(PowerRequest_ForcePowerType)
	*p = x
	return p
}

func (x PowerRequest_ForcePowerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PowerRequest_ForcePowerType) Descriptor() protoreflect.EnumDescriptor {
	return file_hyper_proto_enumTypes[3].Descriptor()
}

func (PowerRequest_ForcePowerType) Type() protoreflect.EnumType {
	return &file_hyper_proto_enumTypes[3]
}

func (x PowerRequest_ForcePowerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PowerRequest_ForcePowerType.Descriptor instead.
func (PowerRequest_ForcePowerType) EnumDescriptor() ([]byte, []int) {
	return file_hyper_proto_rawDescGZIP(), []int{13, 0}
}

type VM struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account                     int32               `protobuf:"varint,1,opt,name=account,proto3" json:"account,omitempty"`
	Id                          string              `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Status                      VMStatus            `protobuf:"varint,17,opt,name=status,proto3,enum=vpc.hyper.VMStatus" json:"status,omitempty"`
	Metadata                    map[string][]byte   `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TemplateId                  string              `protobuf:"bytes,3,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	PlacementId                 string              `protobuf:"bytes,5,opt,name=placement_id,json=placementId,proto3" json:"placement_id,omitempty"`
	HyperId                     string              `protobuf:"bytes,6,opt,name=hyper_id,json=hyperId,proto3" json:"hyper_id,omitempty"`
	SubnetId                    string              `protobuf:"bytes,7,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	Storage                     []*StorageDevice    `protobuf:"bytes,8,rep,name=storage,proto3" json:"storage,omitempty"`
	FwRuleSets                  []string            `protobuf:"bytes,9,rep,name=fw_rule_sets,json=fwRuleSets,proto3" json:"fw_rule_sets,omitempty"`
	Nics                        []string            `protobuf:"bytes,10,rep,name=nics,proto3" json:"nics,omitempty"`
	PowerState                  PowerState          `protobuf:"varint,11,opt,name=power_state,json=powerState,proto3,enum=vpc.hyper.PowerState" json:"power_state,omitempty"`
	PowerStateLastUpdate        string              `protobuf:"bytes,12,opt,name=power_state_last_update,json=powerStateLastUpdate,proto3" json:"power_state_last_update,omitempty"`
	DesiredPowerState           PowerState          `protobuf:"varint,13,opt,name=desired_power_state,json=desiredPowerState,proto3,enum=vpc.hyper.PowerState" json:"desired_power_state,omitempty"`
	DesiredPowerStateLastUpdate string              `protobuf:"bytes,14,opt,name=desired_power_state_last_update,json=desiredPowerStateLastUpdate,proto3" json:"desired_power_state_last_update,omitempty"`
	SshKeyRef                   string              `protobuf:"bytes,15,opt,name=ssh_key_ref,json=sshKeyRef,proto3" json:"ssh_key_ref,omitempty"`
	UserData                    []byte              `protobuf:"bytes,16,opt,name=user_data,json=userData,proto3" json:"user_data,omitempty"`
	CreatedAt                   string              `protobuf:"bytes,18,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt                   string              `protobuf:"bytes,19,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	AvailabilityArea            string              `protobuf:"bytes,20,opt,name=availability_area,json=availabilityArea,proto3" json:"availability_area,omitempty"`
	Volumes                     []*VolumeAttachment `protobuf:"bytes,21,rep,name=volumes,proto3" json:"volumes,omitempty"`
}

func (x *VM) Reset() {
	*x = VM{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyper_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VM) ProtoMessage() {}

func (x *VM) ProtoReflect() protoreflect.Message {
	mi := &file_hyper_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VM.ProtoReflect.Descriptor instead.
func (*VM) Descriptor() ([]byte, []int) {
	return file_hyper_proto_rawDescGZIP(), []int{0}
}

func (x *VM) GetAccount() int32 {
	if x != nil {
		return x.Account
	}
	return 0
}

func (x *VM) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VM) GetStatus() VMStatus {
	if x != nil {
		return x.Status
	}
	return VMStatus_PENDING
}

func (x *VM) GetMetadata() map[string][]byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *VM) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *VM) GetPlacementId() string {
	if x != nil {
		return x.PlacementId
	}
	return ""
}

func (x *VM) GetHyperId() string {
	if x != nil {
		return x.HyperId
	}
	return ""
}

func (x *VM) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

func (x *VM) GetStorage() []*StorageDevice {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *VM) GetFwRuleSets() []string {
	if x != nil {
		return x.FwRuleSets
	}
	return nil
}

func (x *VM) GetNics() []string {
	if x != nil {
		return x.Nics
	}
	return nil
}

func (x *VM) GetPowerState() PowerState {
	if x != nil {
		return x.PowerState
	}
	return PowerState_NONE
}

func (x *VM) GetPowerStateLastUpdate() string {
	if x != nil {
		return x.PowerStateLastUpdate
	}
	return ""
}

func (x *VM) GetDesiredPowerState() PowerState {
	if x != nil {
		return x.DesiredPowerState
	}
	return PowerState_NONE
}

func (x *VM) GetDesiredPowerStateLastUpdate() string {
	if x != nil {
		return x.DesiredPowerStateLastUpdate
	}
	return ""
}

func (x *VM) GetSshKeyRef() string {
	if x != nil {
		return x.SshKeyRef
	}
	return ""
}

func (x *VM) GetUserData() []byte {
	if x != nil {
		return x.UserData
	}
	return nil
}

func (x *VM) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *VM) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *VM) GetAvailabilityArea() string {
	if x != nil {
		return x.AvailabilityArea
	}
	return ""
}

func (x *VM) GetVolumes() []*VolumeAttachment {
	if x != nil {
		return x.Volumes
	}
	return nil
}

type VMTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Vcpu       int32  `protobuf:"varint,2,opt,name=vcpu,proto3" json:"vcpu,omitempty"`
	Ram        int64  `protobuf:"varint,3,opt,name=ram,proto3" json:"ram,omitempty"`
	LibvirtXml string `protobuf:"bytes,4,opt,name=libvirt_xml,json=libvirtXml,proto3" json:"libvirt_xml,omitempty"`
}

func (x *VMTemplate) Reset() {
	*x = VMTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyper_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VMTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMTemplate) ProtoMessage() {}

func (x *VMTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_hyper_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VMTemplate.ProtoReflect.Descriptor instead.
func (*VMTemplate) Descriptor() ([]byte, []int) {
	return file_hyper_proto_rawDescGZIP(), []int{1}
}

func (x *VMTemplate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VMTemplate) GetVcpu() int32 {
	if x != nil {
		return x.Vcpu
	}
	return 0
}

func (x *VMTemplate) GetRam() int64 {
	if x != nil {
		return x.Ram
	}
	return 0
}

func (x *VMTemplate) GetLibvirtXml() string {
	if x != nil {
		return x.LibvirtXml
	}
	return ""
}

type VolumeAttachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Volume string `protobuf:"bytes,1,opt,name=volume,proto3" json:"volume,omitempty"`
	Dev    string `protobuf:"bytes,2,opt,name=dev,proto3" json:"dev,omitempty"`
}

func (x *VolumeAttachment) Reset() {
	*x = VolumeAttachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyper_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VolumeAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VolumeAttachment) ProtoMessage() {}

func (x *VolumeAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_hyper_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VolumeAttachment.ProtoReflect.Descriptor instead.
func (*VolumeAttachment) Descriptor() ([]byte, []int) {
	return file_hyper_proto_rawDescGZIP(), []int{2}
}

func (x *VolumeAttachment) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *VolumeAttachment) GetDev() string {
	if x != nil {
		return x.Dev
	}
	return ""
}

type StorageDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Device string               `protobuf:"bytes,2,opt,name=device,proto3" json:"device,omitempty"`
	Driver StorageDevice_Driver `protobuf:"varint,3,opt,name=driver,proto3,enum=vpc.hyper.StorageDevice_Driver" json:"driver,omitempty"`
	Size   int64                `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *StorageDevice) Reset() {
	*x = StorageDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyper_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageDevice) ProtoMessage() {}

func (x *StorageDevice) ProtoReflect() protoreflect.Message {
	mi := &file_hyper_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageDevice.ProtoReflect.Descriptor instead.
func (*StorageDevice) Descriptor() ([]byte, []int) {
	return file_hyper_proto_rawDescGZIP(), []int{3}
}

func (x *StorageDevice) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StorageDevice) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *StorageDevice) GetDriver() StorageDevice_Driver {
	if x != nil {
		return x.Driver
	}
	return StorageDevice_LOCAL
}

func (x *StorageDevice) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type StatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *StatsRequest) Reset() {
	*x = StatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyper_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsRequest) ProtoMessage() {}

func (x *StatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hyper_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsRequest.ProtoReflect.Descriptor instead.
func (*StatsRequest) Descriptor() ([]byte, []int) {
	return file_hyper_proto_rawDescGZIP(), []int{4}
}

func (x *StatsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type VCPUStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Time  uint64  `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	Usage float32 `protobuf:"fixed32,3,opt,name=usage,proto3" json:"usage,omitempty"`
}

func (x *VCPUStats) Reset() {
	*x = VCPUStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyper_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VCPUStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VCPUStats) ProtoMessage() {}

func (x *VCPUStats) ProtoReflect() protoreflect.Message {
	mi := &file_hyper_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VCPUStats.ProtoReflect.Descriptor instead.
func (*VCPUStats) Descriptor() ([]byte, []int) {
	return file_hyper_proto_rawDescGZIP(), []int{5}
}

func (x *VCPUStats) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VCPUStats) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *VCPUStats) GetUsage() float32 {
	if x != nil {
		return x.Usage
	}
	return 0
}

type MemStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MajorsFaults uint64 `protobuf:"varint,1,opt,name=majors_faults,json=majorsFaults,proto3" json:"majors_faults,omitempty"`
	MinorFaults  uint64 `protobuf:"varint,2,opt,name=minor_faults,json=minorFaults,proto3" json:"minor_faults,omitempty"`
	Unused       uint64 `protobuf:"varint,3,opt,name=unused,proto3" json:"unused,omitempty"`
	Available    uint64 `protobuf:"varint,4,opt,name=available,proto3" json:"available,omitempty"`
	Usable       uint64 `protobuf:"varint,5,opt,name=usable,proto3" json:"usable,omitempty"`
	SwapIn       uint64 `protobuf:"varint,6,opt,name=swap_in,json=swapIn,proto3" json:"swap_in,omitempty"`
	SwapOut      uint64 `protobuf:"varint,7,opt,name=swap_out,json=swapOut,proto3" json:"swap_out,omitempty"`
	LastUpdate   uint64 `protobuf:"varint,8,opt,name=last_update,json=lastUpdate,proto3" json:"last_update,omitempty"`
}

func (x *MemStats) Reset() {
	*x = MemStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyper_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemStats) ProtoMessage() {}

func (x *MemStats) ProtoReflect() protoreflect.Message {
	mi := &file_hyper_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemStats.ProtoReflect.Descriptor instead.
func (*MemStats) Descriptor() ([]byte, []int) {
	return file_hyper_proto_rawDescGZIP(), []int{6}
}

func (x *MemStats) GetMajorsFaults() uint64 {
	if x != nil {
		return x.MajorsFaults
	}
	return 0
}

func (x *MemStats) GetMinorFaults() uint64 {
	if x != nil {
		return x.MinorFaults
	}
	return 0
}

func (x *MemStats) GetUnused() uint64 {
	if x != nil {
		return x.Unused
	}
	return 0
}

func (x *MemStats) GetAvailable() uint64 {
	if x != nil {
		return x.Available
	}
	return 0
}

func (x *MemStats) GetUsable() uint64 {
	if x != nil {
		return x.Usable
	}
	return 0
}

func (x *MemStats) GetSwapIn() uint64 {
	if x != nil {
		return x.SwapIn
	}
	return 0
}

func (x *MemStats) GetSwapOut() uint64 {
	if x != nil {
		return x.SwapOut
	}
	return 0
}

func (x *MemStats) GetLastUpdate() uint64 {
	if x != nil {
		return x.LastUpdate
	}
	return 0
}

type NetStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RxBytes uint64 `protobuf:"varint,2,opt,name=rx_bytes,json=rxBytes,proto3" json:"rx_bytes,omitempty"`
	RxPkts  uint64 `protobuf:"varint,3,opt,name=rx_pkts,json=rxPkts,proto3" json:"rx_pkts,omitempty"`
	RxErrs  uint64 `protobuf:"varint,4,opt,name=rx_errs,json=rxErrs,proto3" json:"rx_errs,omitempty"`
	RxDrops uint64 `protobuf:"varint,5,opt,name=rx_drops,json=rxDrops,proto3" json:"rx_drops,omitempty"`
	TxBytes uint64 `protobuf:"varint,6,opt,name=tx_bytes,json=txBytes,proto3" json:"tx_bytes,omitempty"`
	TxPkts  uint64 `protobuf:"varint,7,opt,name=tx_pkts,json=txPkts,proto3" json:"tx_pkts,omitempty"`
	TxErrs  uint64 `protobuf:"varint,8,opt,name=tx_errs,json=txErrs,proto3" json:"tx_errs,omitempty"`
	TxDrops uint64 `protobuf:"varint,9,opt,name=tx_drops,json=txDrops,proto3" json:"tx_drops,omitempty"`
}

func (x *NetStats) Reset() {
	*x = NetStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyper_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetStats) ProtoMessage() {}

func (x *NetStats) ProtoReflect() protoreflect.Message {
	mi := &file_hyper_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetStats.ProtoReflect.Descriptor instead.
func (*NetStats) Descriptor() ([]byte, []int) {
	return file_hyper_proto_rawDescGZIP(), []int{7}
}

func (x *NetStats) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NetStats) GetRxBytes() uint64 {
	if x != nil {
		return x.RxBytes
	}
	return 0
}

func (x *NetStats) GetRxPkts() uint64 {
	if x != nil {
		return x.RxPkts
	}
	return 0
}

func (x *NetStats) GetRxErrs() uint64 {
	if x != nil {
		return x.RxErrs
	}
	return 0
}

func (x *NetStats) GetRxDrops() uint64 {
	if x != nil {
		return x.RxDrops
	}
	return 0
}

func (x *NetStats) GetTxBytes() uint64 {
	if x != nil {
		return x.TxBytes
	}
	return 0
}

func (x *NetStats) GetTxPkts() uint64 {
	if x != nil {
		return x.TxPkts
	}
	return 0
}

func (x *NetStats) GetTxErrs() uint64 {
	if x != nil {
		return x.TxErrs
	}
	return 0
}

func (x *NetStats) GetTxDrops() uint64 {
	if x != nil {
		return x.TxDrops
	}
	return 0
}

type DiskStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RdReqs  uint64 `protobuf:"varint,2,opt,name=rd_reqs,json=rdReqs,proto3" json:"rd_reqs,omitempty"`
	RdBytes uint64 `protobuf:"varint,3,opt,name=rd_bytes,json=rdBytes,proto3" json:"rd_bytes,omitempty"`
	RdTimes uint64 `protobuf:"varint,4,opt,name=rd_times,json=rdTimes,proto3" json:"rd_times,omitempty"`
	WrReqs  uint64 `protobuf:"varint,5,opt,name=wr_reqs,json=wrReqs,proto3" json:"wr_reqs,omitempty"`
	WrBytes uint64 `protobuf:"varint,6,opt,name=wr_bytes,json=wrBytes,proto3" json:"wr_bytes,omitempty"`
	WrTimes uint64 `protobuf:"varint,7,opt,name=wr_times,json=wrTimes,proto3" json:"wr_times,omitempty"`
	Alloc   uint64 `protobuf:"varint,8,opt,name=alloc,proto3" json:"alloc,omitempty"`
	Cap     uint64 `protobuf:"varint,9,opt,name=cap,proto3" json:"cap,omitempty"`
	Phy     uint64 `protobuf:"varint,10,opt,name=phy,proto3" json:"phy,omitempty"`
}

func (x *DiskStats) Reset() {
	*x = DiskStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyper_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskStats) ProtoMessage() {}

func (x *DiskStats) ProtoReflect() protoreflect.Message {
	mi := &file_hyper_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskStats.ProtoReflect.Descriptor instead.
func (*DiskStats) Descriptor() ([]byte, []int) {
	return file_hyper_proto_rawDescGZIP(), []int{8}
}

func (x *DiskStats) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DiskStats) GetRdReqs() uint64 {
	if x != nil {
		return x.RdReqs
	}
	return 0
}

func (x *DiskStats) GetRdBytes() uint64 {
	if x != nil {
		return x.RdBytes
	}
	return 0
}

func (x *DiskStats) GetRdTimes() uint64 {
	if x != nil {
		return x.RdTimes
	}
	return 0
}

func (x *DiskStats) GetWrReqs() uint64 {
	if x != nil {
		return x.WrReqs
	}
	return 0
}

func (x *DiskStats) GetWrBytes() uint64 {
	if x != nil {
		return x.WrBytes
	}
	return 0
}

func (x *DiskStats) GetWrTimes() uint64 {
	if x != nil {
		return x.WrTimes
	}
	return 0
}

func (x *DiskStats) GetAlloc() uint64 {
	if x != nil {
		return x.Alloc
	}
	return 0
}

func (x *DiskStats) GetCap() uint64 {
	if x != nil {
		return x.Cap
	}
	return 0
}

func (x *DiskStats) GetPhy() uint64 {
	if x != nil {
		return x.Phy
	}
	return 0
}

type VMStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vcpus []*VCPUStats `protobuf:"bytes,1,rep,name=vcpus,proto3" json:"vcpus,omitempty"`
	Nets  []*NetStats  `protobuf:"bytes,2,rep,name=nets,proto3" json:"nets,omitempty"`
	Disks []*DiskStats `protobuf:"bytes,3,rep,name=disks,proto3" json:"disks,omitempty"`
	Mem   *MemStats    `protobuf:"bytes,4,opt,name=mem,proto3" json:"mem,omitempty"`
}

func (x *VMStats) Reset() {
	*x = VMStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyper_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VMStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMStats) ProtoMessage() {}

func (x *VMStats) ProtoReflect() protoreflect.Message {
	mi := &file_hyper_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VMStats.ProtoReflect.Descriptor instead.
func (*VMStats) Descriptor() ([]byte, []int) {
	return file_hyper_proto_rawDescGZIP(), []int{9}
}

func (x *VMStats) GetVcpus() []*VCPUStats {
	if x != nil {
		return x.Vcpus
	}
	return nil
}

func (x *VMStats) GetNets() []*NetStats {
	if x != nil {
		return x.Nets
	}
	return nil
}

func (x *VMStats) GetDisks() []*DiskStats {
	if x != nil {
		return x.Disks
	}
	return nil
}

func (x *VMStats) GetMem() *MemStats {
	if x != nil {
		return x.Mem
	}
	return nil
}

type StatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stats []*VMStats `protobuf:"bytes,1,rep,name=stats,proto3" json:"stats,omitempty"`
}

func (x *StatsResponse) Reset() {
	*x = StatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyper_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsResponse) ProtoMessage() {}

func (x *StatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hyper_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsResponse.ProtoReflect.Descriptor instead.
func (*StatsResponse) Descriptor() ([]byte, []int) {
	return file_hyper_proto_rawDescGZIP(), []int{10}
}

func (x *StatsResponse) GetStats() []*VMStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type ListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyper_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hyper_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_hyper_proto_rawDescGZIP(), []int{11}
}

func (x *ListRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vms []*VM `protobuf:"bytes,1,rep,name=vms,proto3" json:"vms,omitempty"`
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyper_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hyper_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_hyper_proto_rawDescGZIP(), []int{12}
}

func (x *ListResponse) GetVms() []*VM {
	if x != nil {
		return x.Vms
	}
	return nil
}

type PowerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type PowerRequest_ForcePowerType `protobuf:"varint,2,opt,name=type,proto3,enum=vpc.hyper.PowerRequest_ForcePowerType" json:"type,omitempty"`
}

func (x *PowerRequest) Reset() {
	*x = PowerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyper_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PowerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PowerRequest) ProtoMessage() {}

func (x *PowerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hyper_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PowerRequest.ProtoReflect.Descriptor instead.
func (*PowerRequest) Descriptor() ([]byte, []int) {
	return file_hyper_proto_rawDescGZIP(), []int{13}
}

func (x *PowerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PowerRequest) GetType() PowerRequest_ForcePowerType {
	if x != nil {
		return x.Type
	}
	return PowerRequest_REBOOT
}

type PowerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PowerResponse) Reset() {
	*x = PowerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyper_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PowerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PowerResponse) ProtoMessage() {}

func (x *PowerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hyper_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PowerResponse.ProtoReflect.Descriptor instead.
func (*PowerResponse) Descriptor() ([]byte, []int) {
	return file_hyper_proto_rawDescGZIP(), []int{14}
}

var File_hyper_proto protoreflect.FileDescriptor

var file_hyper_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x68, 0x79, 0x70, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x76,
	0x70, 0x63, 0x2e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x22, 0x92, 0x07, 0x0a, 0x02, 0x56, 0x4d, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x76, 0x70, 0x63, 0x2e,
	0x68, 0x79, 0x70, 0x65, 0x72, 0x2e, 0x56, 0x4d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x37, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x76, 0x70, 0x63, 0x2e, 0x68,
	0x79, 0x70, 0x65, 0x72, 0x2e, 0x56, 0x4d, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x79, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x79, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x07, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76,
	0x70, 0x63, 0x2e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12,
	0x20, 0x0a, 0x0c, 0x66, 0x77, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x73, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x69, 0x63, 0x73, 0x12, 0x36, 0x0a, 0x0b, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x76, 0x70, 0x63,
	0x2e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x0a, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a,
	0x17, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x45, 0x0a, 0x13, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x15, 0x2e, 0x76, 0x70, 0x63, 0x2e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x2e, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x11, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65,
	0x64, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x44, 0x0a, 0x1f, 0x64,
	0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x50, 0x6f, 0x77,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x73, 0x73, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x65, 0x66,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x73, 0x68, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x66, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2b, 0x0a, 0x11,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x61, 0x72, 0x65,
	0x61, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x41, 0x72, 0x65, 0x61, 0x12, 0x35, 0x0a, 0x07, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x76, 0x70, 0x63,
	0x2e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73,
	0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x63, 0x0a,
	0x0a, 0x56, 0x4d, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x76,
	0x63, 0x70, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x76, 0x63, 0x70, 0x75, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x72, 0x61,
	0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x62, 0x76, 0x69, 0x72, 0x74, 0x5f, 0x78, 0x6d, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x69, 0x62, 0x76, 0x69, 0x72, 0x74, 0x58,
	0x6d, 0x6c, 0x22, 0x3c, 0x0a, 0x10, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x65, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x65, 0x76,
	0x22, 0xa2, 0x01, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x76, 0x70, 0x63,
	0x2e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x06, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x1c, 0x0a, 0x06, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03,
	0x52, 0x44, 0x42, 0x10, 0x01, 0x22, 0x1e, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x45, 0x0a, 0x09, 0x56, 0x43, 0x50, 0x55, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x22, 0xf5, 0x01, 0x0a,
	0x08, 0x4d, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x6a,
	0x6f, 0x72, 0x73, 0x5f, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x73, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x46, 0x61, 0x75, 0x6c, 0x74,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x75, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x75, 0x6e, 0x75, 0x73, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x73, 0x77, 0x61, 0x70, 0x49, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x77, 0x61, 0x70,
	0x5f, 0x6f, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x77, 0x61, 0x70,
	0x4f, 0x75, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x22, 0xea, 0x01, 0x0a, 0x08, 0x4e, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x78, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x72, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x78, 0x5f, 0x70, 0x6b, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72,
	0x78, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x78, 0x5f, 0x65, 0x72, 0x72, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x78, 0x45, 0x72, 0x72, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x72, 0x78, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x72, 0x78, 0x44, 0x72, 0x6f, 0x70, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x78, 0x5f,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x78, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x70, 0x6b, 0x74, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x78, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x78, 0x5f, 0x65, 0x72, 0x72, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x74, 0x78, 0x45, 0x72, 0x72, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x78, 0x5f, 0x64, 0x72, 0x6f,
	0x70, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x78, 0x44, 0x72, 0x6f, 0x70,
	0x73, 0x22, 0xf3, 0x01, 0x0a, 0x09, 0x44, 0x69, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x72, 0x64, 0x52, 0x65, 0x71, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x64, 0x5f, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x72, 0x64, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x72, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x17,
	0x0a, 0x07, 0x77, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x77, 0x72, 0x52, 0x65, 0x71, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x72, 0x5f, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x77, 0x72, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x77, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x61, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x63, 0x61, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x68, 0x79, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x70, 0x68, 0x79, 0x22, 0xb1, 0x01, 0x0a, 0x07, 0x56, 0x4d, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x63, 0x70, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x76, 0x70, 0x63, 0x2e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x2e, 0x56,
	0x43, 0x50, 0x55, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x76, 0x63, 0x70, 0x75, 0x73, 0x12,
	0x27, 0x0a, 0x04, 0x6e, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x76, 0x70, 0x63, 0x2e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x2e, 0x4e, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x04, 0x6e, 0x65, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x64, 0x69, 0x73, 0x6b,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x76, 0x70, 0x63, 0x2e, 0x68, 0x79,
	0x70, 0x65, 0x72, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x64,
	0x69, 0x73, 0x6b, 0x73, 0x12, 0x25, 0x0a, 0x03, 0x6d, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x76, 0x70, 0x63, 0x2e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x2e, 0x4d, 0x65,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x03, 0x6d, 0x65, 0x6d, 0x22, 0x39, 0x0a, 0x0d, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x70,
	0x63, 0x2e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x2e, 0x56, 0x4d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x22, 0x1d, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2f, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x03, 0x76, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x70, 0x63, 0x2e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x2e, 0x56,
	0x4d, 0x52, 0x03, 0x76, 0x6d, 0x73, 0x22, 0xac, 0x01, 0x0a, 0x0c, 0x50, 0x6f, 0x77, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x76, 0x70, 0x63, 0x2e, 0x68, 0x79, 0x70, 0x65,
	0x72, 0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46,
	0x6f, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x50, 0x0a, 0x0e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x77, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x42, 0x4f, 0x4f, 0x54, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x48, 0x55, 0x54, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x12,
	0x10, 0x0a, 0x0c, 0x46, 0x4f, 0x52, 0x43, 0x45, 0x5f, 0x52, 0x45, 0x42, 0x4f, 0x4f, 0x54, 0x10,
	0x02, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x4f, 0x52, 0x43, 0x45, 0x5f, 0x53, 0x48, 0x55, 0x54, 0x44,
	0x4f, 0x57, 0x4e, 0x10, 0x03, 0x22, 0x0f, 0x0a, 0x0d, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x5a, 0x0a, 0x08, 0x56, 0x4d, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12,
	0x0c, 0x0a, 0x08, 0x43, 0x52, 0x45, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08,
	0x44, 0x45, 0x4c, 0x45, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45,
	0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x63, 0x2a, 0x5a, 0x0a, 0x0a, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55,
	0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x48, 0x55, 0x54, 0x44,
	0x4f, 0x57, 0x4e, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x48, 0x55, 0x54, 0x4f, 0x46, 0x46,
	0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x52, 0x41, 0x53, 0x48, 0x45, 0x44, 0x10, 0x06, 0x12,
	0x0d, 0x0a, 0x09, 0x4d, 0x49, 0x47, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x07, 0x32, 0xc5,
	0x01, 0x0a, 0x0c, 0x48, 0x79, 0x70, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x3c, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x17, 0x2e, 0x76, 0x70, 0x63, 0x2e, 0x68,
	0x79, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x76, 0x70, 0x63, 0x2e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x76, 0x70, 0x63, 0x2e, 0x68, 0x79, 0x70, 0x65,
	0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x76, 0x70, 0x63, 0x2e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x05, 0x50, 0x6f, 0x77, 0x65,
	0x72, 0x12, 0x17, 0x2e, 0x76, 0x70, 0x63, 0x2e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x2e, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x76, 0x70, 0x63,
	0x2e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x68, 0x79, 0x70, 0x65,
	0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hyper_proto_rawDescOnce sync.Once
	file_hyper_proto_rawDescData = file_hyper_proto_rawDesc
)

func file_hyper_proto_rawDescGZIP() []byte {
	file_hyper_proto_rawDescOnce.Do(func() {
		file_hyper_proto_rawDescData = protoimpl.X.CompressGZIP(file_hyper_proto_rawDescData)
	})
	return file_hyper_proto_rawDescData
}

var file_hyper_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_hyper_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_hyper_proto_goTypes = []interface{}{
	(VMStatus)(0),                    // 0: vpc.hyper.VMStatus
	(PowerState)(0),                  // 1: vpc.hyper.PowerState
	(StorageDevice_Driver)(0),        // 2: vpc.hyper.StorageDevice.Driver
	(PowerRequest_ForcePowerType)(0), // 3: vpc.hyper.PowerRequest.ForcePowerType
	(*VM)(nil),                       // 4: vpc.hyper.VM
	(*VMTemplate)(nil),               // 5: vpc.hyper.VMTemplate
	(*VolumeAttachment)(nil),         // 6: vpc.hyper.VolumeAttachment
	(*StorageDevice)(nil),            // 7: vpc.hyper.StorageDevice
	(*StatsRequest)(nil),             // 8: vpc.hyper.StatsRequest
	(*VCPUStats)(nil),                // 9: vpc.hyper.VCPUStats
	(*MemStats)(nil),                 // 10: vpc.hyper.MemStats
	(*NetStats)(nil),                 // 11: vpc.hyper.NetStats
	(*DiskStats)(nil),                // 12: vpc.hyper.DiskStats
	(*VMStats)(nil),                  // 13: vpc.hyper.VMStats
	(*StatsResponse)(nil),            // 14: vpc.hyper.StatsResponse
	(*ListRequest)(nil),              // 15: vpc.hyper.ListRequest
	(*ListResponse)(nil),             // 16: vpc.hyper.ListResponse
	(*PowerRequest)(nil),             // 17: vpc.hyper.PowerRequest
	(*PowerResponse)(nil),            // 18: vpc.hyper.PowerResponse
	nil,                              // 19: vpc.hyper.VM.MetadataEntry
}
var file_hyper_proto_depIdxs = []int32{
	0,  // 0: vpc.hyper.VM.status:type_name -> vpc.hyper.VMStatus
	19, // 1: vpc.hyper.VM.metadata:type_name -> vpc.hyper.VM.MetadataEntry
	7,  // 2: vpc.hyper.VM.storage:type_name -> vpc.hyper.StorageDevice
	1,  // 3: vpc.hyper.VM.power_state:type_name -> vpc.hyper.PowerState
	1,  // 4: vpc.hyper.VM.desired_power_state:type_name -> vpc.hyper.PowerState
	6,  // 5: vpc.hyper.VM.volumes:type_name -> vpc.hyper.VolumeAttachment
	2,  // 6: vpc.hyper.StorageDevice.driver:type_name -> vpc.hyper.StorageDevice.Driver
	9,  // 7: vpc.hyper.VMStats.vcpus:type_name -> vpc.hyper.VCPUStats
	11, // 8: vpc.hyper.VMStats.nets:type_name -> vpc.hyper.NetStats
	12, // 9: vpc.hyper.VMStats.disks:type_name -> vpc.hyper.DiskStats
	10, // 10: vpc.hyper.VMStats.mem:type_name -> vpc.hyper.MemStats
	13, // 11: vpc.hyper.StatsResponse.stats:type_name -> vpc.hyper.VMStats
	4,  // 12: vpc.hyper.ListResponse.vms:type_name -> vpc.hyper.VM
	3,  // 13: vpc.hyper.PowerRequest.type:type_name -> vpc.hyper.PowerRequest.ForcePowerType
	8,  // 14: vpc.hyper.HyperService.Stats:input_type -> vpc.hyper.StatsRequest
	15, // 15: vpc.hyper.HyperService.List:input_type -> vpc.hyper.ListRequest
	17, // 16: vpc.hyper.HyperService.Power:input_type -> vpc.hyper.PowerRequest
	14, // 17: vpc.hyper.HyperService.Stats:output_type -> vpc.hyper.StatsResponse
	16, // 18: vpc.hyper.HyperService.List:output_type -> vpc.hyper.ListResponse
	18, // 19: vpc.hyper.HyperService.Power:output_type -> vpc.hyper.PowerResponse
	17, // [17:20] is the sub-list for method output_type
	14, // [14:17] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_hyper_proto_init() }
func file_hyper_proto_init() {
	if File_hyper_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hyper_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VM); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyper_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VMTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyper_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VolumeAttachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyper_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyper_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyper_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VCPUStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyper_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyper_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyper_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyper_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VMStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyper_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyper_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyper_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyper_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PowerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyper_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PowerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hyper_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hyper_proto_goTypes,
		DependencyIndexes: file_hyper_proto_depIdxs,
		EnumInfos:         file_hyper_proto_enumTypes,
		MessageInfos:      file_hyper_proto_msgTypes,
	}.Build()
	File_hyper_proto = out.File
	file_hyper_proto_rawDesc = nil
	file_hyper_proto_goTypes = nil
	file_hyper_proto_depIdxs = nil
}
