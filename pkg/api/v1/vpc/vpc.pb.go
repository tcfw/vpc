// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.6.1
// source: vpc.proto

package vpc

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type FWRuleSet_Direction int32

const (
	FWRuleSet_INBOUND  FWRuleSet_Direction = 0
	FWRuleSet_OUTBOUND FWRuleSet_Direction = 1
)

// Enum value maps for FWRuleSet_Direction.
var (
	FWRuleSet_Direction_name = map[int32]string{
		0: "INBOUND",
		1: "OUTBOUND",
	}
	FWRuleSet_Direction_value = map[string]int32{
		"INBOUND":  0,
		"OUTBOUND": 1,
	}
)

func (x FWRuleSet_Direction) Enum() *FWRuleSet_Direction {
	p := new(FWRuleSet_Direction)
	*p = x
	return p
}

func (x FWRuleSet_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FWRuleSet_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_vpc_proto_enumTypes[0].Descriptor()
}

func (FWRuleSet_Direction) Type() protoreflect.EnumType {
	return &file_vpc_proto_enumTypes[0]
}

func (x FWRuleSet_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FWRuleSet_Direction.Descriptor instead.
func (FWRuleSet_Direction) EnumDescriptor() ([]byte, []int) {
	return file_vpc_proto_rawDescGZIP(), []int{5, 0}
}

type VPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Account  int32             `protobuf:"varint,2,opt,name=account,proto3" json:"account,omitempty"`
	Cidr     string            `protobuf:"bytes,3,opt,name=cidr,proto3" json:"cidr,omitempty"`
	Metadata map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Asn      int32             `protobuf:"varint,5,opt,name=asn,proto3" json:"asn,omitempty"`
	Vni      int32             `protobuf:"varint,6,opt,name=vni,proto3" json:"vni,omitempty"`
}

func (x *VPC) Reset() {
	*x = VPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VPC) ProtoMessage() {}

func (x *VPC) ProtoReflect() protoreflect.Message {
	mi := &file_vpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VPC.ProtoReflect.Descriptor instead.
func (*VPC) Descriptor() ([]byte, []int) {
	return file_vpc_proto_rawDescGZIP(), []int{0}
}

func (x *VPC) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VPC) GetAccount() int32 {
	if x != nil {
		return x.Account
	}
	return 0
}

func (x *VPC) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

func (x *VPC) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *VPC) GetAsn() int32 {
	if x != nil {
		return x.Asn
	}
	return 0
}

func (x *VPC) GetVni() int32 {
	if x != nil {
		return x.Vni
	}
	return 0
}

type Subnet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VpcId     int32             `protobuf:"varint,2,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	Region    string            `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	Cidr      string            `protobuf:"bytes,4,opt,name=cidr,proto3" json:"cidr,omitempty"`
	Metadata  map[string]string `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	InnerVlan int32             `protobuf:"varint,6,opt,name=inner_vlan,json=innerVlan,proto3" json:"inner_vlan,omitempty"`
}

func (x *Subnet) Reset() {
	*x = Subnet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subnet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subnet) ProtoMessage() {}

func (x *Subnet) ProtoReflect() protoreflect.Message {
	mi := &file_vpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subnet.ProtoReflect.Descriptor instead.
func (*Subnet) Descriptor() ([]byte, []int) {
	return file_vpc_proto_rawDescGZIP(), []int{1}
}

func (x *Subnet) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Subnet) GetVpcId() int32 {
	if x != nil {
		return x.VpcId
	}
	return 0
}

func (x *Subnet) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Subnet) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

func (x *Subnet) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Subnet) GetInnerVlan() int32 {
	if x != nil {
		return x.InnerVlan
	}
	return 0
}

type InternetGW struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VpcId int32  `protobuf:"varint,2,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
}

func (x *InternetGW) Reset() {
	*x = InternetGW{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InternetGW) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternetGW) ProtoMessage() {}

func (x *InternetGW) ProtoReflect() protoreflect.Message {
	mi := &file_vpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternetGW.ProtoReflect.Descriptor instead.
func (*InternetGW) Descriptor() ([]byte, []int) {
	return file_vpc_proto_rawDescGZIP(), []int{2}
}

func (x *InternetGW) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InternetGW) GetVpcId() int32 {
	if x != nil {
		return x.VpcId
	}
	return 0
}

type PublicIP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VpcId    int32  `protobuf:"varint,2,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	Ip       string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Reserved bool   `protobuf:"varint,4,opt,name=reserved,proto3" json:"reserved,omitempty"`
}

func (x *PublicIP) Reset() {
	*x = PublicIP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicIP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicIP) ProtoMessage() {}

func (x *PublicIP) ProtoReflect() protoreflect.Message {
	mi := &file_vpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicIP.ProtoReflect.Descriptor instead.
func (*PublicIP) Descriptor() ([]byte, []int) {
	return file_vpc_proto_rawDescGZIP(), []int{3}
}

func (x *PublicIP) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PublicIP) GetVpcId() int32 {
	if x != nil {
		return x.VpcId
	}
	return 0
}

func (x *PublicIP) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *PublicIP) GetReserved() bool {
	if x != nil {
		return x.Reserved
	}
	return false
}

type FWRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proto   string `protobuf:"bytes,2,opt,name=proto,proto3" json:"proto,omitempty"`
	Cidr    string `protobuf:"bytes,3,opt,name=cidr,proto3" json:"cidr,omitempty"`
	MinPort int32  `protobuf:"varint,4,opt,name=min_port,json=minPort,proto3" json:"min_port,omitempty"`
	MaxPort int32  `protobuf:"varint,5,opt,name=max_port,json=maxPort,proto3" json:"max_port,omitempty"`
}

func (x *FWRule) Reset() {
	*x = FWRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FWRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FWRule) ProtoMessage() {}

func (x *FWRule) ProtoReflect() protoreflect.Message {
	mi := &file_vpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FWRule.ProtoReflect.Descriptor instead.
func (*FWRule) Descriptor() ([]byte, []int) {
	return file_vpc_proto_rawDescGZIP(), []int{4}
}

func (x *FWRule) GetProto() string {
	if x != nil {
		return x.Proto
	}
	return ""
}

func (x *FWRule) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

func (x *FWRule) GetMinPort() int32 {
	if x != nil {
		return x.MinPort
	}
	return 0
}

func (x *FWRule) GetMaxPort() int32 {
	if x != nil {
		return x.MaxPort
	}
	return 0
}

type FWRuleSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Rules     []*FWRule           `protobuf:"bytes,3,rep,name=rules,proto3" json:"rules,omitempty"`
	Direction FWRuleSet_Direction `protobuf:"varint,4,opt,name=direction,proto3,enum=vpc.FWRuleSet_Direction" json:"direction,omitempty"`
}

func (x *FWRuleSet) Reset() {
	*x = FWRuleSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FWRuleSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FWRuleSet) ProtoMessage() {}

func (x *FWRuleSet) ProtoReflect() protoreflect.Message {
	mi := &file_vpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FWRuleSet.ProtoReflect.Descriptor instead.
func (*FWRuleSet) Descriptor() ([]byte, []int) {
	return file_vpc_proto_rawDescGZIP(), []int{5}
}

func (x *FWRuleSet) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FWRuleSet) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FWRuleSet) GetRules() []*FWRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *FWRuleSet) GetDirection() FWRuleSet_Direction {
	if x != nil {
		return x.Direction
	}
	return FWRuleSet_INBOUND
}

type VPCsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VPCsRequest) Reset() {
	*x = VPCsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VPCsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VPCsRequest) ProtoMessage() {}

func (x *VPCsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VPCsRequest.ProtoReflect.Descriptor instead.
func (*VPCsRequest) Descriptor() ([]byte, []int) {
	return file_vpc_proto_rawDescGZIP(), []int{6}
}

type VPCsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VPCs []*VPC `protobuf:"bytes,1,rep,name=VPCs,proto3" json:"VPCs,omitempty"`
}

func (x *VPCsResponse) Reset() {
	*x = VPCsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VPCsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VPCsResponse) ProtoMessage() {}

func (x *VPCsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VPCsResponse.ProtoReflect.Descriptor instead.
func (*VPCsResponse) Descriptor() ([]byte, []int) {
	return file_vpc_proto_rawDescGZIP(), []int{7}
}

func (x *VPCsResponse) GetVPCs() []*VPC {
	if x != nil {
		return x.VPCs
	}
	return nil
}

type VPCInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VpcId int32 `protobuf:"varint,1,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
}

func (x *VPCInfoRequest) Reset() {
	*x = VPCInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VPCInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VPCInfoRequest) ProtoMessage() {}

func (x *VPCInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VPCInfoRequest.ProtoReflect.Descriptor instead.
func (*VPCInfoRequest) Descriptor() ([]byte, []int) {
	return file_vpc_proto_rawDescGZIP(), []int{8}
}

func (x *VPCInfoRequest) GetVpcId() int32 {
	if x != nil {
		return x.VpcId
	}
	return 0
}

type VPCInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vpc        *VPC        `protobuf:"bytes,1,opt,name=vpc,proto3" json:"vpc,omitempty"`
	Subnets    []*Subnet   `protobuf:"bytes,2,rep,name=subnets,proto3" json:"subnets,omitempty"`
	InternetGW *InternetGW `protobuf:"bytes,3,opt,name=internetGW,proto3" json:"internetGW,omitempty"`
}

func (x *VPCInfoResponse) Reset() {
	*x = VPCInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VPCInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VPCInfoResponse) ProtoMessage() {}

func (x *VPCInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VPCInfoResponse.ProtoReflect.Descriptor instead.
func (*VPCInfoResponse) Descriptor() ([]byte, []int) {
	return file_vpc_proto_rawDescGZIP(), []int{9}
}

func (x *VPCInfoResponse) GetVpc() *VPC {
	if x != nil {
		return x.Vpc
	}
	return nil
}

func (x *VPCInfoResponse) GetSubnets() []*Subnet {
	if x != nil {
		return x.Subnets
	}
	return nil
}

func (x *VPCInfoResponse) GetInternetGW() *InternetGW {
	if x != nil {
		return x.InternetGW
	}
	return nil
}

type SubnetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subnets []*Subnet `protobuf:"bytes,1,rep,name=subnets,proto3" json:"subnets,omitempty"`
}

func (x *SubnetsResponse) Reset() {
	*x = SubnetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubnetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubnetsResponse) ProtoMessage() {}

func (x *SubnetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubnetsResponse.ProtoReflect.Descriptor instead.
func (*SubnetsResponse) Descriptor() ([]byte, []int) {
	return file_vpc_proto_rawDescGZIP(), []int{10}
}

func (x *SubnetsResponse) GetSubnets() []*Subnet {
	if x != nil {
		return x.Subnets
	}
	return nil
}

type InternetGWsRespones struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InternetGws []*InternetGW `protobuf:"bytes,1,rep,name=internet_gws,json=internetGws,proto3" json:"internet_gws,omitempty"`
}

func (x *InternetGWsRespones) Reset() {
	*x = InternetGWsRespones{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InternetGWsRespones) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternetGWsRespones) ProtoMessage() {}

func (x *InternetGWsRespones) ProtoReflect() protoreflect.Message {
	mi := &file_vpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternetGWsRespones.ProtoReflect.Descriptor instead.
func (*InternetGWsRespones) Descriptor() ([]byte, []int) {
	return file_vpc_proto_rawDescGZIP(), []int{11}
}

func (x *InternetGWsRespones) GetInternetGws() []*InternetGW {
	if x != nil {
		return x.InternetGws
	}
	return nil
}

var File_vpc_proto protoreflect.FileDescriptor

var file_vpc_proto_rawDesc = []byte{
	0x0a, 0x09, 0x76, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x76, 0x70, 0x63,
	0x22, 0xd8, 0x01, 0x0a, 0x03, 0x56, 0x50, 0x43, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x69, 0x64, 0x72, 0x12, 0x32, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x76, 0x70, 0x63, 0x2e, 0x56,
	0x50, 0x43, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x73, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x76, 0x6e, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x76, 0x6e, 0x69, 0x1a, 0x3b,
	0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xee, 0x01, 0x0a, 0x06,
	0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x76, 0x70, 0x63, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x70, 0x63, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x64, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x64, 0x72, 0x12, 0x35, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x70,
	0x63, 0x2e, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x6c, 0x61, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x6c, 0x61, 0x6e, 0x1a,
	0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x33, 0x0a, 0x0a,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x47, 0x57, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x76, 0x70,
	0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x70, 0x63, 0x49,
	0x64, 0x22, 0x5d, 0x0a, 0x08, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x50, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x76, 0x70, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76,
	0x70, 0x63, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64,
	0x22, 0x68, 0x0a, 0x06, 0x46, 0x57, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x69, 0x64, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x50, 0x6f, 0x72, 0x74, 0x22, 0xb2, 0x01, 0x0a, 0x09, 0x46,
	0x57, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x05,
	0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x76, 0x70,
	0x63, 0x2e, 0x46, 0x57, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x12,
	0x36, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x76, 0x70, 0x63, 0x2e, 0x46, 0x57, 0x52, 0x75, 0x6c, 0x65, 0x53,
	0x65, 0x74, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x26, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x22,
	0x0d, 0x0a, 0x0b, 0x56, 0x50, 0x43, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2c,
	0x0a, 0x0c, 0x56, 0x50, 0x43, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c,
	0x0a, 0x04, 0x56, 0x50, 0x43, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x76,
	0x70, 0x63, 0x2e, 0x56, 0x50, 0x43, 0x52, 0x04, 0x56, 0x50, 0x43, 0x73, 0x22, 0x27, 0x0a, 0x0e,
	0x56, 0x50, 0x43, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15,
	0x0a, 0x06, 0x76, 0x70, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x76, 0x70, 0x63, 0x49, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x0f, 0x56, 0x50, 0x43, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x03, 0x76, 0x70, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x76, 0x70, 0x63, 0x2e, 0x56, 0x50, 0x43,
	0x52, 0x03, 0x76, 0x70, 0x63, 0x12, 0x25, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x76, 0x70, 0x63, 0x2e, 0x53, 0x75, 0x62,
	0x6e, 0x65, 0x74, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x0a,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x47, 0x57, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x76, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x47,
	0x57, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x47, 0x57, 0x22, 0x38, 0x0a,
	0x0f, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x25, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x76, 0x70, 0x63, 0x2e, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x52, 0x07,
	0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x22, 0x49, 0x0a, 0x13, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x65, 0x74, 0x47, 0x57, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x32,
	0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x5f, 0x67, 0x77, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x65, 0x74, 0x47, 0x57, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x47,
	0x77, 0x73, 0x32, 0xeb, 0x01, 0x0a, 0x0a, 0x56, 0x50, 0x43, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x2d, 0x0a, 0x04, 0x56, 0x50, 0x43, 0x73, 0x12, 0x10, 0x2e, 0x76, 0x70, 0x63, 0x2e,
	0x56, 0x50, 0x43, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x76, 0x70,
	0x63, 0x2e, 0x56, 0x50, 0x43, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x36, 0x0a, 0x07, 0x56, 0x50, 0x43, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x2e, 0x76, 0x70,
	0x63, 0x2e, 0x56, 0x50, 0x43, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x76, 0x70, 0x63, 0x2e, 0x56, 0x50, 0x43, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x6e,
	0x65, 0x74, 0x73, 0x12, 0x13, 0x2e, 0x76, 0x70, 0x63, 0x2e, 0x56, 0x50, 0x43, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x76, 0x70, 0x63, 0x2e, 0x53,
	0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3e, 0x0a, 0x0b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x47, 0x57, 0x73, 0x12,
	0x13, 0x2e, 0x76, 0x70, 0x63, 0x2e, 0x56, 0x50, 0x43, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x76, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x65, 0x74, 0x47, 0x57, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x65, 0x73, 0x22, 0x00,
	0x42, 0x07, 0x5a, 0x05, 0x2e, 0x3b, 0x76, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_vpc_proto_rawDescOnce sync.Once
	file_vpc_proto_rawDescData = file_vpc_proto_rawDesc
)

func file_vpc_proto_rawDescGZIP() []byte {
	file_vpc_proto_rawDescOnce.Do(func() {
		file_vpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_vpc_proto_rawDescData)
	})
	return file_vpc_proto_rawDescData
}

var file_vpc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_vpc_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_vpc_proto_goTypes = []interface{}{
	(FWRuleSet_Direction)(0),    // 0: vpc.FWRuleSet.Direction
	(*VPC)(nil),                 // 1: vpc.VPC
	(*Subnet)(nil),              // 2: vpc.Subnet
	(*InternetGW)(nil),          // 3: vpc.InternetGW
	(*PublicIP)(nil),            // 4: vpc.PublicIP
	(*FWRule)(nil),              // 5: vpc.FWRule
	(*FWRuleSet)(nil),           // 6: vpc.FWRuleSet
	(*VPCsRequest)(nil),         // 7: vpc.VPCsRequest
	(*VPCsResponse)(nil),        // 8: vpc.VPCsResponse
	(*VPCInfoRequest)(nil),      // 9: vpc.VPCInfoRequest
	(*VPCInfoResponse)(nil),     // 10: vpc.VPCInfoResponse
	(*SubnetsResponse)(nil),     // 11: vpc.SubnetsResponse
	(*InternetGWsRespones)(nil), // 12: vpc.InternetGWsRespones
	nil,                         // 13: vpc.VPC.MetadataEntry
	nil,                         // 14: vpc.Subnet.MetadataEntry
}
var file_vpc_proto_depIdxs = []int32{
	13, // 0: vpc.VPC.metadata:type_name -> vpc.VPC.MetadataEntry
	14, // 1: vpc.Subnet.metadata:type_name -> vpc.Subnet.MetadataEntry
	5,  // 2: vpc.FWRuleSet.rules:type_name -> vpc.FWRule
	0,  // 3: vpc.FWRuleSet.direction:type_name -> vpc.FWRuleSet.Direction
	1,  // 4: vpc.VPCsResponse.VPCs:type_name -> vpc.VPC
	1,  // 5: vpc.VPCInfoResponse.vpc:type_name -> vpc.VPC
	2,  // 6: vpc.VPCInfoResponse.subnets:type_name -> vpc.Subnet
	3,  // 7: vpc.VPCInfoResponse.internetGW:type_name -> vpc.InternetGW
	2,  // 8: vpc.SubnetsResponse.subnets:type_name -> vpc.Subnet
	3,  // 9: vpc.InternetGWsRespones.internet_gws:type_name -> vpc.InternetGW
	7,  // 10: vpc.VPCService.VPCs:input_type -> vpc.VPCsRequest
	9,  // 11: vpc.VPCService.VPCInfo:input_type -> vpc.VPCInfoRequest
	9,  // 12: vpc.VPCService.Subnets:input_type -> vpc.VPCInfoRequest
	9,  // 13: vpc.VPCService.InternetGWs:input_type -> vpc.VPCInfoRequest
	8,  // 14: vpc.VPCService.VPCs:output_type -> vpc.VPCsResponse
	10, // 15: vpc.VPCService.VPCInfo:output_type -> vpc.VPCInfoResponse
	11, // 16: vpc.VPCService.Subnets:output_type -> vpc.SubnetsResponse
	12, // 17: vpc.VPCService.InternetGWs:output_type -> vpc.InternetGWsRespones
	14, // [14:18] is the sub-list for method output_type
	10, // [10:14] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_vpc_proto_init() }
func file_vpc_proto_init() {
	if File_vpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subnet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InternetGW); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicIP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FWRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FWRuleSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VPCsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VPCsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VPCInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VPCInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubnetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InternetGWsRespones); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vpc_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_vpc_proto_goTypes,
		DependencyIndexes: file_vpc_proto_depIdxs,
		EnumInfos:         file_vpc_proto_enumTypes,
		MessageInfos:      file_vpc_proto_msgTypes,
	}.Build()
	File_vpc_proto = out.File
	file_vpc_proto_rawDesc = nil
	file_vpc_proto_goTypes = nil
	file_vpc_proto_depIdxs = nil
}
