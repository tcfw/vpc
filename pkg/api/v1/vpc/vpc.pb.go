// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vpc.proto

package vpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FWRuleSet_Direction int32

const (
	FWRuleSet_INBOUND  FWRuleSet_Direction = 0
	FWRuleSet_OUTBOUND FWRuleSet_Direction = 1
)

var FWRuleSet_Direction_name = map[int32]string{
	0: "INBOUND",
	1: "OUTBOUND",
}

var FWRuleSet_Direction_value = map[string]int32{
	"INBOUND":  0,
	"OUTBOUND": 1,
}

func (x FWRuleSet_Direction) String() string {
	return proto.EnumName(FWRuleSet_Direction_name, int32(x))
}

func (FWRuleSet_Direction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{5, 0}
}

type VPC struct {
	Id                   int32             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Account              int32             `protobuf:"varint,2,opt,name=account,proto3" json:"account,omitempty"`
	Cidr                 string            `protobuf:"bytes,3,opt,name=cidr,proto3" json:"cidr,omitempty"`
	Metadata             map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Asn                  int32             `protobuf:"varint,5,opt,name=asn,proto3" json:"asn,omitempty"`
	Vni                  int32             `protobuf:"varint,6,opt,name=vni,proto3" json:"vni,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *VPC) Reset()         { *m = VPC{} }
func (m *VPC) String() string { return proto.CompactTextString(m) }
func (*VPC) ProtoMessage()    {}
func (*VPC) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{0}
}

func (m *VPC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VPC.Unmarshal(m, b)
}
func (m *VPC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VPC.Marshal(b, m, deterministic)
}
func (m *VPC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VPC.Merge(m, src)
}
func (m *VPC) XXX_Size() int {
	return xxx_messageInfo_VPC.Size(m)
}
func (m *VPC) XXX_DiscardUnknown() {
	xxx_messageInfo_VPC.DiscardUnknown(m)
}

var xxx_messageInfo_VPC proto.InternalMessageInfo

func (m *VPC) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *VPC) GetAccount() int32 {
	if m != nil {
		return m.Account
	}
	return 0
}

func (m *VPC) GetCidr() string {
	if m != nil {
		return m.Cidr
	}
	return ""
}

func (m *VPC) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *VPC) GetAsn() int32 {
	if m != nil {
		return m.Asn
	}
	return 0
}

func (m *VPC) GetVni() int32 {
	if m != nil {
		return m.Vni
	}
	return 0
}

type Subnet struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VpcId                int32             `protobuf:"varint,2,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	Region               string            `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	Cidr                 string            `protobuf:"bytes,4,opt,name=cidr,proto3" json:"cidr,omitempty"`
	Metadata             map[string]string `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	InnerVlan            int32             `protobuf:"varint,6,opt,name=inner_vlan,json=innerVlan,proto3" json:"inner_vlan,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Subnet) Reset()         { *m = Subnet{} }
func (m *Subnet) String() string { return proto.CompactTextString(m) }
func (*Subnet) ProtoMessage()    {}
func (*Subnet) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{1}
}

func (m *Subnet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subnet.Unmarshal(m, b)
}
func (m *Subnet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subnet.Marshal(b, m, deterministic)
}
func (m *Subnet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subnet.Merge(m, src)
}
func (m *Subnet) XXX_Size() int {
	return xxx_messageInfo_Subnet.Size(m)
}
func (m *Subnet) XXX_DiscardUnknown() {
	xxx_messageInfo_Subnet.DiscardUnknown(m)
}

var xxx_messageInfo_Subnet proto.InternalMessageInfo

func (m *Subnet) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Subnet) GetVpcId() int32 {
	if m != nil {
		return m.VpcId
	}
	return 0
}

func (m *Subnet) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *Subnet) GetCidr() string {
	if m != nil {
		return m.Cidr
	}
	return ""
}

func (m *Subnet) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Subnet) GetInnerVlan() int32 {
	if m != nil {
		return m.InnerVlan
	}
	return 0
}

type InternetGW struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VpcId                int32    `protobuf:"varint,2,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InternetGW) Reset()         { *m = InternetGW{} }
func (m *InternetGW) String() string { return proto.CompactTextString(m) }
func (*InternetGW) ProtoMessage()    {}
func (*InternetGW) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{2}
}

func (m *InternetGW) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternetGW.Unmarshal(m, b)
}
func (m *InternetGW) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternetGW.Marshal(b, m, deterministic)
}
func (m *InternetGW) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternetGW.Merge(m, src)
}
func (m *InternetGW) XXX_Size() int {
	return xxx_messageInfo_InternetGW.Size(m)
}
func (m *InternetGW) XXX_DiscardUnknown() {
	xxx_messageInfo_InternetGW.DiscardUnknown(m)
}

var xxx_messageInfo_InternetGW proto.InternalMessageInfo

func (m *InternetGW) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InternetGW) GetVpcId() int32 {
	if m != nil {
		return m.VpcId
	}
	return 0
}

type PublicIP struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VpcId                int32    `protobuf:"varint,2,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	Ip                   string   `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Reserved             bool     `protobuf:"varint,4,opt,name=reserved,proto3" json:"reserved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublicIP) Reset()         { *m = PublicIP{} }
func (m *PublicIP) String() string { return proto.CompactTextString(m) }
func (*PublicIP) ProtoMessage()    {}
func (*PublicIP) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{3}
}

func (m *PublicIP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicIP.Unmarshal(m, b)
}
func (m *PublicIP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicIP.Marshal(b, m, deterministic)
}
func (m *PublicIP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicIP.Merge(m, src)
}
func (m *PublicIP) XXX_Size() int {
	return xxx_messageInfo_PublicIP.Size(m)
}
func (m *PublicIP) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicIP.DiscardUnknown(m)
}

var xxx_messageInfo_PublicIP proto.InternalMessageInfo

func (m *PublicIP) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PublicIP) GetVpcId() int32 {
	if m != nil {
		return m.VpcId
	}
	return 0
}

func (m *PublicIP) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *PublicIP) GetReserved() bool {
	if m != nil {
		return m.Reserved
	}
	return false
}

type FWRule struct {
	Proto                string   `protobuf:"bytes,2,opt,name=proto,proto3" json:"proto,omitempty"`
	Cidr                 string   `protobuf:"bytes,3,opt,name=cidr,proto3" json:"cidr,omitempty"`
	MinPort              int32    `protobuf:"varint,4,opt,name=min_port,json=minPort,proto3" json:"min_port,omitempty"`
	MaxPort              int32    `protobuf:"varint,5,opt,name=max_port,json=maxPort,proto3" json:"max_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FWRule) Reset()         { *m = FWRule{} }
func (m *FWRule) String() string { return proto.CompactTextString(m) }
func (*FWRule) ProtoMessage()    {}
func (*FWRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{4}
}

func (m *FWRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FWRule.Unmarshal(m, b)
}
func (m *FWRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FWRule.Marshal(b, m, deterministic)
}
func (m *FWRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FWRule.Merge(m, src)
}
func (m *FWRule) XXX_Size() int {
	return xxx_messageInfo_FWRule.Size(m)
}
func (m *FWRule) XXX_DiscardUnknown() {
	xxx_messageInfo_FWRule.DiscardUnknown(m)
}

var xxx_messageInfo_FWRule proto.InternalMessageInfo

func (m *FWRule) GetProto() string {
	if m != nil {
		return m.Proto
	}
	return ""
}

func (m *FWRule) GetCidr() string {
	if m != nil {
		return m.Cidr
	}
	return ""
}

func (m *FWRule) GetMinPort() int32 {
	if m != nil {
		return m.MinPort
	}
	return 0
}

func (m *FWRule) GetMaxPort() int32 {
	if m != nil {
		return m.MaxPort
	}
	return 0
}

type FWRuleSet struct {
	Id                   string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Rules                []*FWRule           `protobuf:"bytes,3,rep,name=rules,proto3" json:"rules,omitempty"`
	Direction            FWRuleSet_Direction `protobuf:"varint,4,opt,name=direction,proto3,enum=vpc.FWRuleSet_Direction" json:"direction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *FWRuleSet) Reset()         { *m = FWRuleSet{} }
func (m *FWRuleSet) String() string { return proto.CompactTextString(m) }
func (*FWRuleSet) ProtoMessage()    {}
func (*FWRuleSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{5}
}

func (m *FWRuleSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FWRuleSet.Unmarshal(m, b)
}
func (m *FWRuleSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FWRuleSet.Marshal(b, m, deterministic)
}
func (m *FWRuleSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FWRuleSet.Merge(m, src)
}
func (m *FWRuleSet) XXX_Size() int {
	return xxx_messageInfo_FWRuleSet.Size(m)
}
func (m *FWRuleSet) XXX_DiscardUnknown() {
	xxx_messageInfo_FWRuleSet.DiscardUnknown(m)
}

var xxx_messageInfo_FWRuleSet proto.InternalMessageInfo

func (m *FWRuleSet) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FWRuleSet) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FWRuleSet) GetRules() []*FWRule {
	if m != nil {
		return m.Rules
	}
	return nil
}

func (m *FWRuleSet) GetDirection() FWRuleSet_Direction {
	if m != nil {
		return m.Direction
	}
	return FWRuleSet_INBOUND
}

type VPCsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VPCsRequest) Reset()         { *m = VPCsRequest{} }
func (m *VPCsRequest) String() string { return proto.CompactTextString(m) }
func (*VPCsRequest) ProtoMessage()    {}
func (*VPCsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{6}
}

func (m *VPCsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VPCsRequest.Unmarshal(m, b)
}
func (m *VPCsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VPCsRequest.Marshal(b, m, deterministic)
}
func (m *VPCsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VPCsRequest.Merge(m, src)
}
func (m *VPCsRequest) XXX_Size() int {
	return xxx_messageInfo_VPCsRequest.Size(m)
}
func (m *VPCsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VPCsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VPCsRequest proto.InternalMessageInfo

type VPCsResponse struct {
	VPCs                 []*VPC   `protobuf:"bytes,1,rep,name=VPCs,proto3" json:"VPCs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VPCsResponse) Reset()         { *m = VPCsResponse{} }
func (m *VPCsResponse) String() string { return proto.CompactTextString(m) }
func (*VPCsResponse) ProtoMessage()    {}
func (*VPCsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{7}
}

func (m *VPCsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VPCsResponse.Unmarshal(m, b)
}
func (m *VPCsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VPCsResponse.Marshal(b, m, deterministic)
}
func (m *VPCsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VPCsResponse.Merge(m, src)
}
func (m *VPCsResponse) XXX_Size() int {
	return xxx_messageInfo_VPCsResponse.Size(m)
}
func (m *VPCsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VPCsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VPCsResponse proto.InternalMessageInfo

func (m *VPCsResponse) GetVPCs() []*VPC {
	if m != nil {
		return m.VPCs
	}
	return nil
}

type VPCInfoRequest struct {
	VpcId                int32    `protobuf:"varint,1,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VPCInfoRequest) Reset()         { *m = VPCInfoRequest{} }
func (m *VPCInfoRequest) String() string { return proto.CompactTextString(m) }
func (*VPCInfoRequest) ProtoMessage()    {}
func (*VPCInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{8}
}

func (m *VPCInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VPCInfoRequest.Unmarshal(m, b)
}
func (m *VPCInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VPCInfoRequest.Marshal(b, m, deterministic)
}
func (m *VPCInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VPCInfoRequest.Merge(m, src)
}
func (m *VPCInfoRequest) XXX_Size() int {
	return xxx_messageInfo_VPCInfoRequest.Size(m)
}
func (m *VPCInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VPCInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VPCInfoRequest proto.InternalMessageInfo

func (m *VPCInfoRequest) GetVpcId() int32 {
	if m != nil {
		return m.VpcId
	}
	return 0
}

type VPCInfoResponse struct {
	Vpc                  *VPC        `protobuf:"bytes,1,opt,name=vpc,proto3" json:"vpc,omitempty"`
	Subnets              []*Subnet   `protobuf:"bytes,2,rep,name=subnets,proto3" json:"subnets,omitempty"`
	InternetGW           *InternetGW `protobuf:"bytes,3,opt,name=internetGW,proto3" json:"internetGW,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *VPCInfoResponse) Reset()         { *m = VPCInfoResponse{} }
func (m *VPCInfoResponse) String() string { return proto.CompactTextString(m) }
func (*VPCInfoResponse) ProtoMessage()    {}
func (*VPCInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{9}
}

func (m *VPCInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VPCInfoResponse.Unmarshal(m, b)
}
func (m *VPCInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VPCInfoResponse.Marshal(b, m, deterministic)
}
func (m *VPCInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VPCInfoResponse.Merge(m, src)
}
func (m *VPCInfoResponse) XXX_Size() int {
	return xxx_messageInfo_VPCInfoResponse.Size(m)
}
func (m *VPCInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VPCInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VPCInfoResponse proto.InternalMessageInfo

func (m *VPCInfoResponse) GetVpc() *VPC {
	if m != nil {
		return m.Vpc
	}
	return nil
}

func (m *VPCInfoResponse) GetSubnets() []*Subnet {
	if m != nil {
		return m.Subnets
	}
	return nil
}

func (m *VPCInfoResponse) GetInternetGW() *InternetGW {
	if m != nil {
		return m.InternetGW
	}
	return nil
}

type SubnetsResponse struct {
	Subnets              []*Subnet `protobuf:"bytes,1,rep,name=subnets,proto3" json:"subnets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SubnetsResponse) Reset()         { *m = SubnetsResponse{} }
func (m *SubnetsResponse) String() string { return proto.CompactTextString(m) }
func (*SubnetsResponse) ProtoMessage()    {}
func (*SubnetsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{10}
}

func (m *SubnetsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubnetsResponse.Unmarshal(m, b)
}
func (m *SubnetsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubnetsResponse.Marshal(b, m, deterministic)
}
func (m *SubnetsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubnetsResponse.Merge(m, src)
}
func (m *SubnetsResponse) XXX_Size() int {
	return xxx_messageInfo_SubnetsResponse.Size(m)
}
func (m *SubnetsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubnetsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubnetsResponse proto.InternalMessageInfo

func (m *SubnetsResponse) GetSubnets() []*Subnet {
	if m != nil {
		return m.Subnets
	}
	return nil
}

type InternetGWsRespones struct {
	InternetGws          []*InternetGW `protobuf:"bytes,1,rep,name=internet_gws,json=internetGws,proto3" json:"internet_gws,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *InternetGWsRespones) Reset()         { *m = InternetGWsRespones{} }
func (m *InternetGWsRespones) String() string { return proto.CompactTextString(m) }
func (*InternetGWsRespones) ProtoMessage()    {}
func (*InternetGWsRespones) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{11}
}

func (m *InternetGWsRespones) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternetGWsRespones.Unmarshal(m, b)
}
func (m *InternetGWsRespones) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternetGWsRespones.Marshal(b, m, deterministic)
}
func (m *InternetGWsRespones) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternetGWsRespones.Merge(m, src)
}
func (m *InternetGWsRespones) XXX_Size() int {
	return xxx_messageInfo_InternetGWsRespones.Size(m)
}
func (m *InternetGWsRespones) XXX_DiscardUnknown() {
	xxx_messageInfo_InternetGWsRespones.DiscardUnknown(m)
}

var xxx_messageInfo_InternetGWsRespones proto.InternalMessageInfo

func (m *InternetGWsRespones) GetInternetGws() []*InternetGW {
	if m != nil {
		return m.InternetGws
	}
	return nil
}

func init() {
	proto.RegisterEnum("vpc.FWRuleSet_Direction", FWRuleSet_Direction_name, FWRuleSet_Direction_value)
	proto.RegisterType((*VPC)(nil), "vpc.VPC")
	proto.RegisterMapType((map[string]string)(nil), "vpc.VPC.MetadataEntry")
	proto.RegisterType((*Subnet)(nil), "vpc.Subnet")
	proto.RegisterMapType((map[string]string)(nil), "vpc.Subnet.MetadataEntry")
	proto.RegisterType((*InternetGW)(nil), "vpc.InternetGW")
	proto.RegisterType((*PublicIP)(nil), "vpc.PublicIP")
	proto.RegisterType((*FWRule)(nil), "vpc.FWRule")
	proto.RegisterType((*FWRuleSet)(nil), "vpc.FWRuleSet")
	proto.RegisterType((*VPCsRequest)(nil), "vpc.VPCsRequest")
	proto.RegisterType((*VPCsResponse)(nil), "vpc.VPCsResponse")
	proto.RegisterType((*VPCInfoRequest)(nil), "vpc.VPCInfoRequest")
	proto.RegisterType((*VPCInfoResponse)(nil), "vpc.VPCInfoResponse")
	proto.RegisterType((*SubnetsResponse)(nil), "vpc.SubnetsResponse")
	proto.RegisterType((*InternetGWsRespones)(nil), "vpc.InternetGWsRespones")
}

func init() { proto.RegisterFile("vpc.proto", fileDescriptor_95d23e4d548ba1d7) }

var fileDescriptor_95d23e4d548ba1d7 = []byte{
	// 689 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x53, 0xdd, 0x6e, 0xd3, 0x48,
	0x14, 0x8e, 0x93, 0x38, 0xb1, 0x8f, 0xfb, 0xb7, 0xd3, 0x6e, 0xe5, 0x46, 0xbb, 0x52, 0x77, 0xa4,
	0x85, 0x5e, 0x40, 0x90, 0x52, 0x51, 0x55, 0x20, 0x71, 0xd1, 0x14, 0x50, 0x2e, 0x68, 0xad, 0x09,
	0x4d, 0x25, 0x24, 0x14, 0xb9, 0xf6, 0x50, 0x46, 0x24, 0x63, 0xe3, 0xbf, 0xb6, 0x0f, 0xc0, 0x0b,
	0xf1, 0x34, 0xbc, 0x03, 0x12, 0xcf, 0x80, 0x66, 0xc6, 0x76, 0xa6, 0xa5, 0x45, 0x95, 0xb8, 0x9b,
	0xf3, 0x7f, 0xbe, 0xef, 0x7c, 0x03, 0x76, 0x11, 0x07, 0xfd, 0x38, 0x89, 0xb2, 0x08, 0xb5, 0x8a,
	0x38, 0xc0, 0xdf, 0x0c, 0x68, 0x4d, 0xbc, 0x21, 0x5a, 0x81, 0x26, 0x0b, 0x5d, 0x63, 0xdb, 0xd8,
	0x31, 0x49, 0x93, 0x85, 0xc8, 0x85, 0xae, 0x1f, 0x04, 0x51, 0xce, 0x33, 0xb7, 0x29, 0x9d, 0x95,
	0x89, 0x10, 0xb4, 0x03, 0x16, 0x26, 0x6e, 0x6b, 0xdb, 0xd8, 0xb1, 0x89, 0x7c, 0xa3, 0x01, 0x58,
	0x73, 0x9a, 0xf9, 0xa1, 0x9f, 0xf9, 0x6e, 0x7b, 0xbb, 0xb5, 0xe3, 0x0c, 0x36, 0xfb, 0x62, 0xd0,
	0xc4, 0x1b, 0xf6, 0xdf, 0x94, 0x81, 0x97, 0x3c, 0x4b, 0xae, 0x48, 0x9d, 0x87, 0xd6, 0xa0, 0xe5,
	0xa7, 0xdc, 0x35, 0x65, 0x77, 0xf1, 0x14, 0x9e, 0x82, 0x33, 0xb7, 0xa3, 0x3c, 0x05, 0x67, 0xbd,
	0xe7, 0xb0, 0x7c, 0xad, 0x5c, 0xa4, 0x7c, 0xa2, 0x57, 0x72, 0x4f, 0x9b, 0x88, 0x27, 0xda, 0x00,
	0xb3, 0xf0, 0x67, 0x39, 0x95, 0x6b, 0xda, 0x44, 0x19, 0xcf, 0x9a, 0xfb, 0x06, 0xfe, 0x61, 0x40,
	0x67, 0x9c, 0x9f, 0x71, 0x9a, 0x69, 0xe8, 0x6c, 0x89, 0xee, 0x6f, 0xe8, 0x14, 0x71, 0x30, 0x65,
	0x61, 0x09, 0xce, 0x2c, 0xe2, 0x60, 0x14, 0xa2, 0x4d, 0xe8, 0x24, 0xf4, 0x9c, 0x45, 0xbc, 0x04,
	0x57, 0x5a, 0x35, 0xe4, 0xb6, 0x06, 0xf9, 0xa9, 0x06, 0xd9, 0x94, 0x90, 0xb7, 0x24, 0x64, 0x35,
	0xf1, 0x4e, 0xd4, 0xff, 0x02, 0x30, 0xce, 0x69, 0x32, 0x2d, 0x66, 0x3e, 0x2f, 0xa1, 0xda, 0xd2,
	0x33, 0x99, 0xf9, 0xfc, 0xcf, 0x00, 0xef, 0x02, 0x8c, 0x78, 0x46, 0x13, 0x4e, 0xb3, 0xd7, 0xa7,
	0xf7, 0xc4, 0x8c, 0xdf, 0x83, 0xe5, 0xe5, 0x67, 0x33, 0x16, 0x8c, 0xbc, 0xfb, 0xd2, 0x24, 0xd2,
	0xe2, 0x92, 0xa2, 0x26, 0x8b, 0x51, 0x0f, 0xac, 0x84, 0xa6, 0x34, 0x29, 0x68, 0x28, 0x29, 0xb2,
	0x48, 0x6d, 0xe3, 0x8f, 0xd0, 0x79, 0x75, 0x4a, 0xf2, 0x19, 0x15, 0x7b, 0x4b, 0xdd, 0x55, 0x7b,
	0x2b, 0x11, 0xde, 0xa6, 0xa6, 0x2d, 0xb0, 0xe6, 0x8c, 0x4f, 0xe3, 0x28, 0xc9, 0x64, 0x3f, 0x93,
	0x74, 0xe7, 0x8c, 0x7b, 0x51, 0x92, 0xc9, 0x90, 0x7f, 0xa9, 0x42, 0x66, 0x19, 0xf2, 0x2f, 0x45,
	0x08, 0x7f, 0x35, 0xc0, 0x56, 0xa3, 0xc6, 0xb7, 0x5c, 0x1c, 0x41, 0x9b, 0xfb, 0xf3, 0x8a, 0x34,
	0xf9, 0x46, 0xff, 0x81, 0x99, 0xe4, 0x33, 0x9a, 0xba, 0x2d, 0x79, 0x3f, 0x47, 0xde, 0x4f, 0xb5,
	0x20, 0x2a, 0x82, 0xf6, 0xc0, 0x0e, 0x59, 0x42, 0x83, 0x4c, 0x88, 0x42, 0xec, 0xb2, 0x32, 0x70,
	0xb5, 0xb4, 0x31, 0xcd, 0xfa, 0x87, 0x55, 0x9c, 0x2c, 0x52, 0xf1, 0x03, 0xb0, 0x6b, 0x3f, 0x72,
	0xa0, 0x3b, 0x3a, 0x3a, 0x38, 0x3e, 0x39, 0x3a, 0x5c, 0x6b, 0xa0, 0x25, 0xb0, 0x8e, 0x4f, 0xde,
	0x2a, 0xcb, 0xc0, 0xcb, 0xe0, 0x4c, 0xbc, 0x61, 0x4a, 0xe8, 0xe7, 0x9c, 0xa6, 0x19, 0x7e, 0x04,
	0x4b, 0xca, 0x4c, 0xe3, 0x88, 0xa7, 0x14, 0xfd, 0x03, 0x6d, 0x61, 0xbb, 0x86, 0x5c, 0xd0, 0xaa,
	0xfe, 0x14, 0x91, 0x5e, 0xfc, 0x10, 0x56, 0x26, 0xde, 0x70, 0xc4, 0x3f, 0x44, 0x65, 0xbd, 0x76,
	0x30, 0x43, 0xbf, 0xf1, 0x17, 0x03, 0x56, 0xeb, 0xcc, 0xb2, 0x75, 0x0f, 0xc4, 0xff, 0x97, 0x79,
	0x7a, 0x67, 0xe1, 0x44, 0xff, 0x43, 0x37, 0x95, 0x32, 0x4e, 0xdd, 0xa6, 0x46, 0x8d, 0x92, 0x36,
	0xa9, 0x62, 0xe8, 0x89, 0xd0, 0x72, 0xa5, 0x37, 0x79, 0x41, 0x67, 0xb0, 0x2a, 0x33, 0x17, 0x32,
	0x24, 0x5a, 0x0a, 0xde, 0x87, 0x55, 0xd5, 0x63, 0x81, 0x50, 0x1b, 0x65, 0xdc, 0x3d, 0x0a, 0x8f,
	0x60, 0x7d, 0xd1, 0xb3, 0xac, 0xa6, 0x29, 0x1a, 0xc0, 0x52, 0xd5, 0x7e, 0x7a, 0x7e, 0x51, 0xb5,
	0xf8, 0x65, 0x07, 0xa7, 0xde, 0xe1, 0x22, 0x1d, 0x7c, 0x37, 0x00, 0x26, 0xde, 0x70, 0x4c, 0x93,
	0x82, 0x05, 0x14, 0x3d, 0x56, 0x14, 0xa3, 0xb5, 0x8a, 0x82, 0xea, 0x18, 0xbd, 0xbf, 0x34, 0x8f,
	0xda, 0x16, 0x37, 0xd0, 0x1e, 0x74, 0x4b, 0x26, 0xd1, 0x7a, 0x15, 0xd7, 0x2e, 0xd0, 0xdb, 0xb8,
	0xee, 0xd4, 0xeb, 0x4a, 0xe8, 0xbf, 0xab, 0xbb, 0xc1, 0x0e, 0x6e, 0xa0, 0x17, 0xe0, 0x68, 0xc0,
	0x6f, 0xaf, 0x75, 0x6f, 0xe0, 0xad, 0xf9, 0xc1, 0x8d, 0x03, 0xf3, 0x9d, 0xb8, 0xe8, 0x59, 0x47,
	0xfe, 0xb6, 0xdd, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xef, 0xf0, 0xda, 0xb4, 0xff, 0x05, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VPCServiceClient is the client API for VPCService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VPCServiceClient interface {
	VPCs(ctx context.Context, in *VPCsRequest, opts ...grpc.CallOption) (*VPCsResponse, error)
	VPCInfo(ctx context.Context, in *VPCInfoRequest, opts ...grpc.CallOption) (*VPCInfoResponse, error)
	Subnets(ctx context.Context, in *VPCInfoRequest, opts ...grpc.CallOption) (*SubnetsResponse, error)
	InternetGWs(ctx context.Context, in *VPCInfoRequest, opts ...grpc.CallOption) (*InternetGWsRespones, error)
}

type vPCServiceClient struct {
	cc *grpc.ClientConn
}

func NewVPCServiceClient(cc *grpc.ClientConn) VPCServiceClient {
	return &vPCServiceClient{cc}
}

func (c *vPCServiceClient) VPCs(ctx context.Context, in *VPCsRequest, opts ...grpc.CallOption) (*VPCsResponse, error) {
	out := new(VPCsResponse)
	err := c.cc.Invoke(ctx, "/vpc.VPCService/VPCs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vPCServiceClient) VPCInfo(ctx context.Context, in *VPCInfoRequest, opts ...grpc.CallOption) (*VPCInfoResponse, error) {
	out := new(VPCInfoResponse)
	err := c.cc.Invoke(ctx, "/vpc.VPCService/VPCInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vPCServiceClient) Subnets(ctx context.Context, in *VPCInfoRequest, opts ...grpc.CallOption) (*SubnetsResponse, error) {
	out := new(SubnetsResponse)
	err := c.cc.Invoke(ctx, "/vpc.VPCService/Subnets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vPCServiceClient) InternetGWs(ctx context.Context, in *VPCInfoRequest, opts ...grpc.CallOption) (*InternetGWsRespones, error) {
	out := new(InternetGWsRespones)
	err := c.cc.Invoke(ctx, "/vpc.VPCService/InternetGWs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VPCServiceServer is the server API for VPCService service.
type VPCServiceServer interface {
	VPCs(context.Context, *VPCsRequest) (*VPCsResponse, error)
	VPCInfo(context.Context, *VPCInfoRequest) (*VPCInfoResponse, error)
	Subnets(context.Context, *VPCInfoRequest) (*SubnetsResponse, error)
	InternetGWs(context.Context, *VPCInfoRequest) (*InternetGWsRespones, error)
}

// UnimplementedVPCServiceServer can be embedded to have forward compatible implementations.
type UnimplementedVPCServiceServer struct {
}

func (*UnimplementedVPCServiceServer) VPCs(ctx context.Context, req *VPCsRequest) (*VPCsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VPCs not implemented")
}
func (*UnimplementedVPCServiceServer) VPCInfo(ctx context.Context, req *VPCInfoRequest) (*VPCInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VPCInfo not implemented")
}
func (*UnimplementedVPCServiceServer) Subnets(ctx context.Context, req *VPCInfoRequest) (*SubnetsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Subnets not implemented")
}
func (*UnimplementedVPCServiceServer) InternetGWs(ctx context.Context, req *VPCInfoRequest) (*InternetGWsRespones, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InternetGWs not implemented")
}

func RegisterVPCServiceServer(s *grpc.Server, srv VPCServiceServer) {
	s.RegisterService(&_VPCService_serviceDesc, srv)
}

func _VPCService_VPCs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VPCsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VPCServiceServer).VPCs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vpc.VPCService/VPCs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VPCServiceServer).VPCs(ctx, req.(*VPCsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VPCService_VPCInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VPCInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VPCServiceServer).VPCInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vpc.VPCService/VPCInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VPCServiceServer).VPCInfo(ctx, req.(*VPCInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VPCService_Subnets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VPCInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VPCServiceServer).Subnets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vpc.VPCService/Subnets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VPCServiceServer).Subnets(ctx, req.(*VPCInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VPCService_InternetGWs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VPCInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VPCServiceServer).InternetGWs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vpc.VPCService/InternetGWs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VPCServiceServer).InternetGWs(ctx, req.(*VPCInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VPCService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "vpc.VPCService",
	HandlerType: (*VPCServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "VPCs",
			Handler:    _VPCService_VPCs_Handler,
		},
		{
			MethodName: "VPCInfo",
			Handler:    _VPCService_VPCInfo_Handler,
		},
		{
			MethodName: "Subnets",
			Handler:    _VPCService_Subnets_Handler,
		},
		{
			MethodName: "InternetGWs",
			Handler:    _VPCService_InternetGWs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vpc.proto",
}
