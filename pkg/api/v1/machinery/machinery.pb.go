// Code generated by protoc-gen-go. DO NOT EDIT.
// source: machinery.proto

package machinery

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DeviceType int32

const (
	DeviceType_ROUTER DeviceType = 0
	DeviceType_VM     DeviceType = 1
)

var DeviceType_name = map[int32]string{
	0: "ROUTER",
	1: "VM",
}

var DeviceType_value = map[string]int32{
	"ROUTER": 0,
	"VM":     1,
}

func (x DeviceType) String() string {
	return proto.EnumName(DeviceType_name, int32(x))
}

func (DeviceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eacba22506aa7981, []int{0}
}

type Machine_Capability int32

const (
	Machine_ORCHEST Machine_Capability = 0
	Machine_COMPUTE Machine_Capability = 1
	Machine_NETWORK Machine_Capability = 2
)

var Machine_Capability_name = map[int32]string{
	0: "ORCHEST",
	1: "COMPUTE",
	2: "NETWORK",
}

var Machine_Capability_value = map[string]int32{
	"ORCHEST": 0,
	"COMPUTE": 1,
	"NETWORK": 2,
}

func (x Machine_Capability) String() string {
	return proto.EnumName(Machine_Capability_name, int32(x))
}

func (Machine_Capability) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eacba22506aa7981, []int{0, 0}
}

type Machine struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Capabilities         []Machine_Capability `protobuf:"varint,2,rep,packed,name=capabilities,proto3,enum=vpc.machinery.Machine_Capability" json:"capabilities,omitempty"`
	LastCheckin          string               `protobuf:"bytes,3,opt,name=last_checkin,json=lastCheckin,proto3" json:"last_checkin,omitempty"`
	Region               string               `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Machine) Reset()         { *m = Machine{} }
func (m *Machine) String() string { return proto.CompactTextString(m) }
func (*Machine) ProtoMessage()    {}
func (*Machine) Descriptor() ([]byte, []int) {
	return fileDescriptor_eacba22506aa7981, []int{0}
}

func (m *Machine) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Machine.Unmarshal(m, b)
}
func (m *Machine) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Machine.Marshal(b, m, deterministic)
}
func (m *Machine) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Machine.Merge(m, src)
}
func (m *Machine) XXX_Size() int {
	return xxx_messageInfo_Machine.Size(m)
}
func (m *Machine) XXX_DiscardUnknown() {
	xxx_messageInfo_Machine.DiscardUnknown(m)
}

var xxx_messageInfo_Machine proto.InternalMessageInfo

func (m *Machine) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Machine) GetCapabilities() []Machine_Capability {
	if m != nil {
		return m.Capabilities
	}
	return nil
}

func (m *Machine) GetLastCheckin() string {
	if m != nil {
		return m.LastCheckin
	}
	return ""
}

func (m *Machine) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

type Placement struct {
	Id                   string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MachineId            string     `protobuf:"bytes,2,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
	VpcId                int32      `protobuf:"varint,3,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	DeviceType           DeviceType `protobuf:"varint,4,opt,name=device_type,json=deviceType,proto3,enum=vpc.machinery.DeviceType" json:"device_type,omitempty"`
	DeviceId             string     `protobuf:"bytes,5,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Placement) Reset()         { *m = Placement{} }
func (m *Placement) String() string { return proto.CompactTextString(m) }
func (*Placement) ProtoMessage()    {}
func (*Placement) Descriptor() ([]byte, []int) {
	return fileDescriptor_eacba22506aa7981, []int{1}
}

func (m *Placement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Placement.Unmarshal(m, b)
}
func (m *Placement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Placement.Marshal(b, m, deterministic)
}
func (m *Placement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Placement.Merge(m, src)
}
func (m *Placement) XXX_Size() int {
	return xxx_messageInfo_Placement.Size(m)
}
func (m *Placement) XXX_DiscardUnknown() {
	xxx_messageInfo_Placement.DiscardUnknown(m)
}

var xxx_messageInfo_Placement proto.InternalMessageInfo

func (m *Placement) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Placement) GetMachineId() string {
	if m != nil {
		return m.MachineId
	}
	return ""
}

func (m *Placement) GetVpcId() int32 {
	if m != nil {
		return m.VpcId
	}
	return 0
}

func (m *Placement) GetDeviceType() DeviceType {
	if m != nil {
		return m.DeviceType
	}
	return DeviceType_ROUTER
}

func (m *Placement) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

type PlacementsRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlacementsRequest) Reset()         { *m = PlacementsRequest{} }
func (m *PlacementsRequest) String() string { return proto.CompactTextString(m) }
func (*PlacementsRequest) ProtoMessage()    {}
func (*PlacementsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eacba22506aa7981, []int{2}
}

func (m *PlacementsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlacementsRequest.Unmarshal(m, b)
}
func (m *PlacementsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlacementsRequest.Marshal(b, m, deterministic)
}
func (m *PlacementsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlacementsRequest.Merge(m, src)
}
func (m *PlacementsRequest) XXX_Size() int {
	return xxx_messageInfo_PlacementsRequest.Size(m)
}
func (m *PlacementsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlacementsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlacementsRequest proto.InternalMessageInfo

func (m *PlacementsRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type PlacementsResponse struct {
	Placements           []*Placement `protobuf:"bytes,1,rep,name=placements,proto3" json:"placements,omitempty"`
	Types                []DeviceType `protobuf:"varint,2,rep,packed,name=types,proto3,enum=vpc.machinery.DeviceType" json:"types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PlacementsResponse) Reset()         { *m = PlacementsResponse{} }
func (m *PlacementsResponse) String() string { return proto.CompactTextString(m) }
func (*PlacementsResponse) ProtoMessage()    {}
func (*PlacementsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eacba22506aa7981, []int{3}
}

func (m *PlacementsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlacementsResponse.Unmarshal(m, b)
}
func (m *PlacementsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlacementsResponse.Marshal(b, m, deterministic)
}
func (m *PlacementsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlacementsResponse.Merge(m, src)
}
func (m *PlacementsResponse) XXX_Size() int {
	return xxx_messageInfo_PlacementsResponse.Size(m)
}
func (m *PlacementsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PlacementsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PlacementsResponse proto.InternalMessageInfo

func (m *PlacementsResponse) GetPlacements() []*Placement {
	if m != nil {
		return m.Placements
	}
	return nil
}

func (m *PlacementsResponse) GetTypes() []DeviceType {
	if m != nil {
		return m.Types
	}
	return nil
}

type PingResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingResponse) Reset()         { *m = PingResponse{} }
func (m *PingResponse) String() string { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()    {}
func (*PingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eacba22506aa7981, []int{4}
}

func (m *PingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingResponse.Unmarshal(m, b)
}
func (m *PingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingResponse.Marshal(b, m, deterministic)
}
func (m *PingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingResponse.Merge(m, src)
}
func (m *PingResponse) XXX_Size() int {
	return xxx_messageInfo_PingResponse.Size(m)
}
func (m *PingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PingResponse proto.InternalMessageInfo

type MachinesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MachinesRequest) Reset()         { *m = MachinesRequest{} }
func (m *MachinesRequest) String() string { return proto.CompactTextString(m) }
func (*MachinesRequest) ProtoMessage()    {}
func (*MachinesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eacba22506aa7981, []int{5}
}

func (m *MachinesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachinesRequest.Unmarshal(m, b)
}
func (m *MachinesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachinesRequest.Marshal(b, m, deterministic)
}
func (m *MachinesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachinesRequest.Merge(m, src)
}
func (m *MachinesRequest) XXX_Size() int {
	return xxx_messageInfo_MachinesRequest.Size(m)
}
func (m *MachinesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MachinesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MachinesRequest proto.InternalMessageInfo

type MachinesResponse struct {
	Machines             []*Machine `protobuf:"bytes,1,rep,name=machines,proto3" json:"machines,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MachinesResponse) Reset()         { *m = MachinesResponse{} }
func (m *MachinesResponse) String() string { return proto.CompactTextString(m) }
func (*MachinesResponse) ProtoMessage()    {}
func (*MachinesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eacba22506aa7981, []int{6}
}

func (m *MachinesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachinesResponse.Unmarshal(m, b)
}
func (m *MachinesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachinesResponse.Marshal(b, m, deterministic)
}
func (m *MachinesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachinesResponse.Merge(m, src)
}
func (m *MachinesResponse) XXX_Size() int {
	return xxx_messageInfo_MachinesResponse.Size(m)
}
func (m *MachinesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MachinesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MachinesResponse proto.InternalMessageInfo

func (m *MachinesResponse) GetMachines() []*Machine {
	if m != nil {
		return m.Machines
	}
	return nil
}

func init() {
	proto.RegisterEnum("vpc.machinery.DeviceType", DeviceType_name, DeviceType_value)
	proto.RegisterEnum("vpc.machinery.Machine_Capability", Machine_Capability_name, Machine_Capability_value)
	proto.RegisterType((*Machine)(nil), "vpc.machinery.Machine")
	proto.RegisterType((*Placement)(nil), "vpc.machinery.Placement")
	proto.RegisterType((*PlacementsRequest)(nil), "vpc.machinery.PlacementsRequest")
	proto.RegisterType((*PlacementsResponse)(nil), "vpc.machinery.PlacementsResponse")
	proto.RegisterType((*PingResponse)(nil), "vpc.machinery.PingResponse")
	proto.RegisterType((*MachinesRequest)(nil), "vpc.machinery.MachinesRequest")
	proto.RegisterType((*MachinesResponse)(nil), "vpc.machinery.MachinesResponse")
}

func init() { proto.RegisterFile("machinery.proto", fileDescriptor_eacba22506aa7981) }

var fileDescriptor_eacba22506aa7981 = []byte{
	// 477 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x53, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x8d, 0x9d, 0x26, 0x8d, 0xc7, 0x21, 0x75, 0x47, 0xa2, 0x32, 0xad, 0x00, 0xc7, 0x5c, 0x22,
	0x0e, 0x46, 0x72, 0x2f, 0x08, 0x89, 0x0b, 0xc1, 0x88, 0x08, 0x85, 0x44, 0x1b, 0x17, 0x24, 0x2e,
	0x91, 0xbb, 0xbb, 0x6a, 0x57, 0xa4, 0xce, 0x62, 0x9b, 0x48, 0x3e, 0xf1, 0x3f, 0x7c, 0x0d, 0x3f,
	0xc3, 0xbd, 0xb2, 0x63, 0x6f, 0xd2, 0xb4, 0xe9, 0x2d, 0xf3, 0xe6, 0xcd, 0x7b, 0x6f, 0x66, 0x63,
	0x38, 0xba, 0x89, 0xe8, 0xb5, 0x88, 0x79, 0x92, 0x7b, 0x32, 0x59, 0x66, 0x4b, 0x7c, 0xb2, 0x92,
	0xd4, 0x53, 0xa0, 0xfb, 0x4f, 0x83, 0xc3, 0xf1, 0xba, 0xc2, 0x1e, 0xe8, 0x82, 0xd9, 0x9a, 0xa3,
	0x0d, 0x0c, 0xa2, 0x0b, 0x86, 0x01, 0x74, 0x69, 0x24, 0xa3, 0x4b, 0xb1, 0x10, 0x99, 0xe0, 0xa9,
	0xad, 0x3b, 0xcd, 0x41, 0xcf, 0xef, 0x7b, 0x77, 0x14, 0xbc, 0x6a, 0xda, 0x1b, 0xd6, 0xd4, 0x9c,
	0xdc, 0x19, 0xc3, 0x3e, 0x74, 0x17, 0x51, 0x9a, 0xcd, 0xe9, 0x35, 0xa7, 0x3f, 0x45, 0x6c, 0x37,
	0x4b, 0x03, 0xb3, 0xc0, 0x86, 0x6b, 0x08, 0x4f, 0xa0, 0x9d, 0xf0, 0x2b, 0xb1, 0x8c, 0xed, 0x83,
	0xb2, 0x59, 0x55, 0xee, 0x39, 0xc0, 0x46, 0x16, 0x4d, 0x38, 0x9c, 0x90, 0xe1, 0xe7, 0x60, 0x16,
	0x5a, 0x8d, 0xa2, 0x18, 0x4e, 0xc6, 0xd3, 0x8b, 0x30, 0xb0, 0xb4, 0xa2, 0xf8, 0x1a, 0x84, 0xdf,
	0x27, 0xe4, 0x8b, 0xa5, 0xbb, 0x7f, 0x35, 0x30, 0xa6, 0x8b, 0x88, 0xf2, 0x1b, 0x1e, 0x67, 0xf7,
	0x96, 0x7a, 0x0e, 0x50, 0x65, 0x9f, 0x0b, 0x66, 0xeb, 0x25, 0x6e, 0x54, 0xc8, 0x88, 0xe1, 0x53,
	0x68, 0xaf, 0x24, 0x2d, 0x5a, 0x45, 0xcc, 0x16, 0x69, 0xad, 0x24, 0x1d, 0x31, 0x7c, 0x07, 0x26,
	0xe3, 0x2b, 0x41, 0xf9, 0x3c, 0xcb, 0x25, 0x2f, 0x53, 0xf6, 0xfc, 0x67, 0x3b, 0x97, 0xf8, 0x58,
	0x32, 0xc2, 0x5c, 0x72, 0x02, 0x4c, 0xfd, 0xc6, 0x33, 0x30, 0xaa, 0x59, 0xc1, 0xec, 0x56, 0x69,
	0xd8, 0x59, 0x03, 0x23, 0xe6, 0xbe, 0x82, 0x63, 0x95, 0x35, 0x25, 0xfc, 0xd7, 0x6f, 0x9e, 0xde,
	0xcb, 0xec, 0xfe, 0x01, 0xdc, 0x26, 0xa5, 0x72, 0x19, 0xa7, 0x1c, 0xdf, 0x02, 0x48, 0x85, 0xda,
	0x9a, 0xd3, 0x1c, 0x98, 0xbe, 0xbd, 0x13, 0x49, 0x8d, 0x91, 0x2d, 0x2e, 0xbe, 0x81, 0x56, 0xb1,
	0x46, 0xfd, 0xa2, 0x8f, 0xec, 0xb1, 0xe6, 0xb9, 0x3d, 0xe8, 0x4e, 0x45, 0x7c, 0x55, 0x5b, 0xbb,
	0xc7, 0x70, 0x54, 0x3d, 0x7b, 0x9d, 0xd9, 0xfd, 0x04, 0xd6, 0x06, 0xaa, 0x12, 0xfa, 0xd0, 0xa9,
	0x54, 0xeb, 0x7c, 0x27, 0x0f, 0xff, 0x79, 0x88, 0xe2, 0xbd, 0x76, 0x00, 0x36, 0xfe, 0x08, 0xd0,
	0x26, 0x93, 0x8b, 0x30, 0x20, 0x56, 0x03, 0xdb, 0xa0, 0x7f, 0x1b, 0x5b, 0x9a, 0xff, 0x5f, 0x53,
	0x56, 0x49, 0x3e, 0xe3, 0x49, 0x41, 0xc6, 0xf7, 0x70, 0x50, 0x24, 0xc4, 0x3d, 0x06, 0xa7, 0x67,
	0xbb, 0x87, 0xd9, 0x5e, 0xa7, 0x81, 0x33, 0x80, 0xcd, 0x85, 0xd1, 0xd9, 0x77, 0xc5, 0x7a, 0xdb,
	0xd3, 0xfe, 0x23, 0x0c, 0x25, 0x3a, 0x86, 0x4e, 0x7d, 0x12, 0x7c, 0xf1, 0x70, 0x2e, 0x25, 0xf8,
	0x72, 0x6f, 0xbf, 0x96, 0xfb, 0x60, 0xfe, 0x30, 0x54, 0xff, 0xb2, 0x5d, 0x7e, 0xcd, 0xe7, 0xb7,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xb6, 0xfc, 0xe9, 0xaa, 0xe0, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MachineryServiceClient is the client API for MachineryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MachineryServiceClient interface {
	Ping(ctx context.Context, in *Machine, opts ...grpc.CallOption) (*PingResponse, error)
	Placements(ctx context.Context, in *PlacementsRequest, opts ...grpc.CallOption) (*PlacementsResponse, error)
	Machines(ctx context.Context, in *MachinesRequest, opts ...grpc.CallOption) (*MachinesResponse, error)
}

type machineryServiceClient struct {
	cc *grpc.ClientConn
}

func NewMachineryServiceClient(cc *grpc.ClientConn) MachineryServiceClient {
	return &machineryServiceClient{cc}
}

func (c *machineryServiceClient) Ping(ctx context.Context, in *Machine, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := c.cc.Invoke(ctx, "/vpc.machinery.MachineryService/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *machineryServiceClient) Placements(ctx context.Context, in *PlacementsRequest, opts ...grpc.CallOption) (*PlacementsResponse, error) {
	out := new(PlacementsResponse)
	err := c.cc.Invoke(ctx, "/vpc.machinery.MachineryService/Placements", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *machineryServiceClient) Machines(ctx context.Context, in *MachinesRequest, opts ...grpc.CallOption) (*MachinesResponse, error) {
	out := new(MachinesResponse)
	err := c.cc.Invoke(ctx, "/vpc.machinery.MachineryService/Machines", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MachineryServiceServer is the server API for MachineryService service.
type MachineryServiceServer interface {
	Ping(context.Context, *Machine) (*PingResponse, error)
	Placements(context.Context, *PlacementsRequest) (*PlacementsResponse, error)
	Machines(context.Context, *MachinesRequest) (*MachinesResponse, error)
}

// UnimplementedMachineryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMachineryServiceServer struct {
}

func (*UnimplementedMachineryServiceServer) Ping(ctx context.Context, req *Machine) (*PingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedMachineryServiceServer) Placements(ctx context.Context, req *PlacementsRequest) (*PlacementsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Placements not implemented")
}
func (*UnimplementedMachineryServiceServer) Machines(ctx context.Context, req *MachinesRequest) (*MachinesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Machines not implemented")
}

func RegisterMachineryServiceServer(s *grpc.Server, srv MachineryServiceServer) {
	s.RegisterService(&_MachineryService_serviceDesc, srv)
}

func _MachineryService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Machine)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MachineryServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vpc.machinery.MachineryService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MachineryServiceServer).Ping(ctx, req.(*Machine))
	}
	return interceptor(ctx, in, info, handler)
}

func _MachineryService_Placements_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlacementsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MachineryServiceServer).Placements(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vpc.machinery.MachineryService/Placements",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MachineryServiceServer).Placements(ctx, req.(*PlacementsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MachineryService_Machines_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MachinesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MachineryServiceServer).Machines(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vpc.machinery.MachineryService/Machines",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MachineryServiceServer).Machines(ctx, req.(*MachinesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MachineryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "vpc.machinery.MachineryService",
	HandlerType: (*MachineryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _MachineryService_Ping_Handler,
		},
		{
			MethodName: "Placements",
			Handler:    _MachineryService_Placements_Handler,
		},
		{
			MethodName: "Machines",
			Handler:    _MachineryService_Machines_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "machinery.proto",
}
